






<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-KYH8zRCvGYQoVsdDKgYaJRXDN9CwQu0YkPVgbKm4cOiqLAxNisg2Kjex6tfrEB3yTAwtXcFY/sxBVj/3IkIiqg==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-a70126cbff30372f13f599b76353080b.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-L+Xfjk72/sIPS5T8Z8Wy/+/78ngrN7jAjVpE5Zoo2KfZYqr9s8p6selV7sLydYrh0Y3Pu02CuEa7uuq70RjSxg==" rel="stylesheet" href="https://github.githubassets.com/assets/site-278e4176d194ae782983c71f1f767503.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-C2PeOYJLfGX0l1usuxFpXXEX27kP3TXRWl7jQ/qpMF59td5XFUUqB/EmZL2loRRBzouPP96e09oq2jovH+smEA==" rel="stylesheet" href="https://github.githubassets.com/assets/github-0d139b56f7fdba32feb4dfab70407a06.css" />
    
    
    
    

  <meta name="viewport" content="width=device-width">
  
  <title>KGxXWa Â· GitHub</title>
    <meta name="description" content="KGxXWa. GitHub Gist: instantly share code, notes, and snippets.">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch-gist.xml" title="Gist">
  <link rel="fluid-icon" href="https://gist.github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta property="og:image" content="https://avatars0.githubusercontent.com/u/6591797?s=400&amp;v=4" /><meta property="og:site_name" content="Gist" /><meta property="og:type" content="article" /><meta property="og:title" content="KGxXWa" /><meta property="og:url" content="https://gist.github.com/taroyanaka/4653c12ed8388296b2f8e9311367ce94" /><meta property="og:description" content="KGxXWa. GitHub Gist: instantly share code, notes, and snippets." /><meta property="article:author" content="262588213843476" /><meta property="article:publisher" content="262588213843476" />

  <link rel="assets" href="https://github.githubassets.com/">
  
  <meta name="pjax-timeout" content="1000">
  
  <meta name="request-id" content="E2C1:653B:33F79AB:4E7F95E:5C6B80EA" data-pjax-transient>


  

  <meta name="selected-link" value="gist_code" data-pjax-transient>

      <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

  <meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="gist" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="E2C1:653B:33F79AB:4E7F95E:5C6B80EA" /><meta name="octolytics-dimension-region_edge" content="sea" /><meta name="octolytics-dimension-region_render" content="iad" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;gist-id&gt;" data-pjax-transient="true" />



    <meta name="google-analytics" content="UA-3769691-4">


<meta class="js-ga-set" name="dimension1" content="Logged Out">



    <meta name="octolytics-dimension-public" content="true" /><meta name="octolytics-dimension-gist_id" content="92607446" /><meta name="octolytics-dimension-gist_name" content="4653c12ed8388296b2f8e9311367ce94" /><meta name="octolytics-dimension-anonymous" content="false" /><meta name="octolytics-dimension-owner_id" content="6591797" /><meta name="octolytics-dimension-owner_login" content="taroyanaka" /><meta name="octolytics-dimension-forked" content="false" />

  <meta class="js-ga-set" name="dimension5" content="public">
  <meta class="js-ga-set" name="dimension6" content="owned">
  <meta class="js-ga-set" name="dimension7" content="javascript markdown unknown">


      <meta name="hostname" content="gist.github.com">
    <meta name="user-login" content="">

      <meta name="expected-hostname" content="gist.github.com">
    <meta name="js-proxy-site-detection-payload" content="ZGVmN2QzODcyYmQ4NGQ5MDNlZTMwN2JmMzBiN2ZjMjIxYzAwYTczYzg2Y2RhOGEzYzU4YjAyMTkxZGJjYzY4Znx7InJlbW90ZV9hZGRyZXNzIjoiMTI2LjE1LjI0Mi40NyIsInJlcXVlc3RfaWQiOiJFMkMxOjY1M0I6MzNGNzlBQjo0RTdGOTVFOjVDNkI4MEVBIiwidGltZXN0YW1wIjoxNTUwNTQ5MjI2LCJob3N0IjoiZ2l0aHViLmNvbSJ9">

    <meta name="enabled-features" content="UNIVERSE_BANNER,MARKETPLACE_PLAN_RESTRICTION_EDITOR,MARKETPLACE_BROWSING_V2">

  <meta name="html-safe-nonce" content="4c2f6dac948fbc1e066bd6fe77d901d9b830f3b3">

  <meta http-equiv="x-pjax-version" content="98d5256d7349d11a5b19aa312f4d8977">
  

      <link href="/taroyanaka.atom" rel="alternate" title="atom" type="application/atom+xml">

  <link crossorigin="anonymous" media="all" integrity="sha512-moW8UWV2Gt+uebNktQcqJqqj35pLrFsSSLFkwGpoDPyURdfiYup47UCap5Ai2+zWMkXCmNK4xTgZ/qf5ofTlQQ==" rel="stylesheet" href="https://github.githubassets.com/assets/gist-1cb5b934faa83e85f3912f62cb69a6f3.css" />




  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://github.githubassets.com/favicon.ico">

<meta name="theme-color" content="#1e2327">





  </head>

  <body class="logged-out env-production">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    


        <div class="Header gist-header header-logged-out" role="banner">
  <div class="container-lg px-3 clearfix">
    <div class="d-flex flex-justify-between">
      <div class="d-flex">
        <a class="header-logo-wordmark" data-hotkey="g d" aria-label="Gist Homepage" href="/">
          <svg width="78" height="28" class="octicon octicon-logo-github" viewBox="0 0 45 16" version="1.1" aria-hidden="true"><path fill-rule="evenodd" d="M18.53 12.03h-.02c.009 0 .015.01.024.011h.006l-.01-.01zm.004.011c-.093.001-.327.05-.574.05-.78 0-1.05-.36-1.05-.83V8.13h1.59c.09 0 .16-.08.16-.19v-1.7c0-.09-.08-.17-.16-.17h-1.59V3.96c0-.08-.05-.13-.14-.13h-2.16c-.09 0-.14.05-.14.13v2.17s-1.09.27-1.16.28c-.08.02-.13.09-.13.17v1.36c0 .11.08.19.17.19h1.11v3.28c0 2.44 1.7 2.69 2.86 2.69.53 0 1.17-.17 1.27-.22.06-.02.09-.09.09-.16v-1.5a.177.177 0 0 0-.146-.18zM42.23 9.84c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25zm2.43-.16c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88zm-8.72-3.61h-2.1c-.11 0-.17.08-.17.19v5.44s-.55.39-1.3.39-.97-.34-.97-1.09V6.25c0-.09-.08-.17-.17-.17h-2.14c-.09 0-.17.08-.17.17v5.11c0 2.2 1.23 2.75 2.92 2.75 1.39 0 2.52-.77 2.52-.77s.05.39.08.45c.02.05.09.09.16.09h1.34c.11 0 .17-.08.17-.17l.02-7.47c0-.09-.08-.17-.19-.17zm-23.7-.01h-2.13c-.09 0-.17.09-.17.2v7.34c0 .2.13.27.3.27h1.92c.2 0 .25-.09.25-.27V6.23c0-.09-.08-.17-.17-.17zm-1.05-3.38c-.77 0-1.38.61-1.38 1.38 0 .77.61 1.38 1.38 1.38.75 0 1.36-.61 1.36-1.38 0-.77-.61-1.38-1.36-1.38zm16.49-.25h-2.11c-.09 0-.17.08-.17.17v4.09h-3.31V2.6c0-.09-.08-.17-.17-.17h-2.13c-.09 0-.17.08-.17.17v11.11c0 .09.09.17.17.17h2.13c.09 0 .17-.08.17-.17V8.96h3.31l-.02 4.75c0 .09.08.17.17.17h2.13c.09 0 .17-.08.17-.17V2.6c0-.09-.08-.17-.17-.17zM8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17z"/></svg>
          <svg width="40" height="28" class="octicon octicon-logo-gist" viewBox="0 0 25 16" version="1.1" aria-hidden="true"><path fill-rule="evenodd" d="M4.7 8.73h2.45v4.02c-.55.27-1.64.34-2.53.34-2.56 0-3.47-2.2-3.47-5.05 0-2.85.91-5.06 3.48-5.06 1.28 0 2.06.23 3.28.73V2.66C7.27 2.33 6.25 2 4.63 2 1.13 2 0 4.69 0 8.03c0 3.34 1.11 6.03 4.63 6.03 1.64 0 2.81-.27 3.59-.64V7.73H4.7v1zm6.39 3.72V6.06h-1.05v6.28c0 1.25.58 1.72 1.72 1.72v-.89c-.48 0-.67-.16-.67-.7v-.02zm.25-8.72c0-.44-.33-.78-.78-.78s-.77.34-.77.78.33.78.77.78.78-.34.78-.78zm4.34 5.69c-1.5-.13-1.78-.48-1.78-1.17 0-.77.33-1.34 1.88-1.34 1.05 0 1.66.16 2.27.36v-.94c-.69-.3-1.52-.39-2.25-.39-2.2 0-2.92 1.2-2.92 2.31 0 1.08.47 1.88 2.73 2.08 1.55.13 1.77.63 1.77 1.34 0 .73-.44 1.42-2.06 1.42-1.11 0-1.86-.19-2.33-.36v.94c.5.2 1.58.39 2.33.39 2.38 0 3.14-1.2 3.14-2.41 0-1.28-.53-2.03-2.75-2.23h-.03zm8.58-2.47v-.86h-2.42v-2.5l-1.08.31v2.11l-1.56.44v.48h1.56v5c0 1.53 1.19 2.13 2.5 2.13.19 0 .52-.02.69-.05v-.89c-.19.03-.41.03-.61.03-.97 0-1.5-.39-1.5-1.34V6.94h2.42v.02-.01z"/></svg>
</a>
        <div class="site-search js-site-search" role="search">
            <div class="header-search" role="search">

<!-- '"` --><!-- </textarea></xmp> --></option></form><form class="position-relative js-quicksearch-form" action="/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
  <label class="header-search-wrapper form-control js-chromeless-input-container">
    <input type="text"
      class="form-control js-site-search-focus header-search-input"
      data-hotkey="s,/"
      name="q"
      placeholder="Searchâ¦"
      autocorrect="off"
      autocomplete="off"
      autocapitalize="off">
  </label>

</form></div>

        </div>

        <ul class="list-style-none d-flex flex-items-center text-bold pl-2" role="navigation">
          <li><a class="HeaderNavlink px-2" data-ga-click="Header, go to all gists, text:all gists" href="/discover">All gists</a></li>
          <li><a class="HeaderNavlink px-2" data-ga-click="Header, go to GitHub, text:Back to GitHub" href="https://github.com">Back to GitHub</a></li>
        </ul>
      </div>

        <div class="header-actions" role="navigation">
            <a class="btn btn-primary" data-ga-click="Header, sign up" href="/join?source=header-gist">Sign up for a GitHub account</a>
          <a class="btn" data-ga-click="Header, sign in" href="https://gist.github.com/auth/github?return_to=https%3A%2F%2Fgist.github.com%2Ftaroyanaka%2F4653c12ed8388296b2f8e9311367ce94">Sign in</a>
        </div>
    </div>
  </div>
</div>



  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">

</div>



  <div role="main" class="application-main " data-commit-hovercards-enabled>
        <div itemscope itemtype="http://schema.org/Code">
    <div id="gist-pjax-container" class="gist-content-wrapper" data-pjax-container>
      


  <div class="gist-detail-intro gist-banner">
    <div class="container">
      <p class="lead">
        Instantly share code, notes, and snippets.
      </p>
    </div>
  </div>


<div class="gisthead pagehead repohead instapaper_ignore readability-menu experiment-repo-nav mb-4">
  <div class="container">
    
  
<div class="container repohead-details-container">

  <ul class="pagehead-actions">


    <li>
        <a class="btn btn-sm btn-with-count tooltipped tooltipped-n" aria-label="You must be signed in to star a gist" rel="nofollow" href="/login?return_to=https%3A%2F%2Fgist.github.com%2Ftaroyanaka%2F4653c12ed8388296b2f8e9311367ce94">
    <svg class="octicon octicon-star" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
    Star
</a>
  <a class="social-count" aria-label="0 users starred this gist" href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/stargazers">
    0
</a>
    </li>

      <li>
          <a class="btn btn-sm btn-with-count tooltipped tooltipped-n" aria-label="You must be signed in to fork a gist" rel="nofollow" href="/login?return_to=https%3A%2F%2Fgist.github.com%2Ftaroyanaka%2F4653c12ed8388296b2f8e9311367ce94">
    <svg class="octicon octicon-repo-forked" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
    Fork
</a>
  <a class="social-count" aria-label="0 users forked this gist" href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/forks">
    0
</a>
      </li>
  </ul>

  <h1 class="public css-truncate">
    <img class="avatar gist-avatar" src="https://avatars0.githubusercontent.com/u/6591797?s=52&amp;v=4" width="26" height="26" alt="@taroyanaka" />
    <span class="author"><a rel="author" class="url fn" href="/taroyanaka"><span itemprop="author">taroyanaka</span></a></span><!--
        --><span class="path-divider">/</span><!--
        --><strong itemprop="name" class="gist-header-title css-truncate-target"><a href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94">kgxxwa.markdown</a></strong>

    <div class="d-block text-small text-gray">
      Last active <time-ago datetime="2018-10-23T04:15:44Z">Oct 23, 2018</time-ago>
    </div>
  </h1>
</div>

<div class="container gist-file-navigation">
  <div class="float-right file-navigation-options" data-multiple>

    <div class="file-navigation-option v-align-middle">

  <div class="input-group js-gist-share-menu">
    <div class="input-group-button">
      <details class="details-reset details-overlay select-menu">
        <summary class="btn btn-sm select-menu-button" data-ga-click="Repository, clone Embed, location:repo overview">
          <span data-menu-button>Embed</span>
        </summary>
        <details-menu class="select-menu-modal position-absolute" style="z-index: 99;" aria-label="Clone options">
          <div class="select-menu-header">
            <span class="select-menu-title">What would you like to do?</span>
          </div>
          <div class="select-menu-list">
              <button type="button"
                  class="select-menu-item width-full"
                  aria-checked="true"
                  role="menuitemradio"
                  tabindex="0"
                  value="&lt;script src=&quot;https://gist.github.com/taroyanaka/4653c12ed8388296b2f8e9311367ce94.js&quot;&gt;&lt;/script&gt;">
                <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
                <div class="select-menu-item-text">
                  <span class="select-menu-item-heading" data-menu-button-text>
                    
                    Embed
                  </span>
                    <span class="description">
                      Embed this gist in your website.
                    </span>
                </div>
              </button>
              <button type="button"
                  class="select-menu-item width-full"
                  aria-checked="false"
                  role="menuitemradio"
                  tabindex="0"
                  value="https://gist.github.com/taroyanaka/4653c12ed8388296b2f8e9311367ce94">
                <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
                <div class="select-menu-item-text">
                  <span class="select-menu-item-heading" data-menu-button-text>
                    
                    Share
                  </span>
                    <span class="description">
                      Copy sharable link for this gist.
                    </span>
                </div>
              </button>
              <button type="button"
                  class="select-menu-item width-full"
                  aria-checked="false"
                  role="menuitemradio"
                  tabindex="0"
                  value="https://gist.github.com/4653c12ed8388296b2f8e9311367ce94.git">
                <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
                <div class="select-menu-item-text">
                  <span class="select-menu-item-heading" data-menu-button-text>
                    Clone via
                    HTTPS
                  </span>
                    <span class="description">
                      Clone with Git or checkout with SVN using the repositoryâs web address.
                    </span>
                </div>
              </button>
          </div>
          <div class="select-menu-list" role="menu">
            <a class="select-menu-item select-menu-action" href="https://help.github.com/articles/which-remote-url-should-i-use" target="_blank">
              <svg class="octicon octicon-question select-menu-item-icon" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M6 10h2v2H6v-2zm4-3.5C10 8.64 8 9 8 9H6c0-.55.45-1 1-1h.5c.28 0 .5-.22.5-.5v-1c0-.28-.22-.5-.5-.5h-1c-.28 0-.5.22-.5.5V7H4c0-1.5 1.5-3 3-3s3 1 3 2.5zM7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7z"/></svg>
              <div class="select-menu-item-text">
                Learn more about clone URLs
              </div>
            </a>
          </div>
        </details-menu>
      </details>
    </div>

    <input
      id="gist-share-url"
      type="text"
      data-autoselect
      class="form-control input-monospace input-sm"
      value="&lt;script src=&quot;https://gist.github.com/taroyanaka/4653c12ed8388296b2f8e9311367ce94.js&quot;&gt;&lt;/script&gt;"
      aria-label="Clone this repository at &lt;script src=&quot;https://gist.github.com/taroyanaka/4653c12ed8388296b2f8e9311367ce94.js&quot;&gt;&lt;/script&gt;"
      readonly>

    <div class="input-group-button">
      <clipboard-copy for="gist-share-url" aria-label="Copy to clipboard" class="btn btn-sm zeroclipboard-button">
        <svg class="octicon octicon-clippy" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"/></svg>
      </clipboard-copy>
    </div>
  </div>
</div>


    <div class="file-navigation-option">
</div>


    <div class="file-navigation-option">
      <a href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/archive/db129c260c012b8956e839e8468066be02daf970.zip"
          class="btn btn-sm"
          rel="nofollow"
          data-ga-click="Gist, download zip, location:gist overview">
        Download ZIP
      </a>
    </div>
  </div>

  <div class="float-left">
    <nav class="reponav js-repo-nav js-sidenav-container-pjax"
     role="navigation"
     data-pjax="#gist-pjax-container">

  <a class="js-selected-navigation-item selected reponav-item" aria-label="Code" data-pjax="true" data-hotkey="g c" aria-current="page" data-selected-links="gist_code /taroyanaka/4653c12ed8388296b2f8e9311367ce94" href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94">
    <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
    Code
</a>
    <a class="js-selected-navigation-item reponav-item" aria-label="Revisions" data-pjax="true" data-hotkey="g r" data-selected-links="gist_revisions /taroyanaka/4653c12ed8388296b2f8e9311367ce94/revisions" href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/revisions">
      <svg class="octicon octicon-git-commit" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10.86 7c-.45-1.72-2-3-3.86-3-1.86 0-3.41 1.28-3.86 3H0v2h3.14c.45 1.72 2 3 3.86 3 1.86 0 3.41-1.28 3.86-3H14V7h-3.14zM7 10.2c-1.22 0-2.2-.98-2.2-2.2 0-1.22.98-2.2 2.2-2.2 1.22 0 2.2.98 2.2 2.2 0 1.22-.98 2.2-2.2 2.2z"/></svg>
      Revisions
      <span class="Counter">2</span>
</a>

</nav>

  </div>
</div>


  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content gist-content">
    
  <div>
      <div itemprop="about">
    KGxXWa
  </div>


        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-kgxxwa-markdown" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a class="btn btn-sm " href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/raw/db129c260c012b8956e839e8468066be02daf970/kgxxwa.markdown">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg class="octicon octicon-gist" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-kgxxwa-markdown">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              kgxxwa.markdown
            </strong>
          </a>
        </div>
      </div>
    
  <div id="file-kgxxwa-markdown-readme" class="readme blob instapaper_body js-code-block-container">
    <article class="markdown-body entry-content" itemprop="text"><h2><a id="user-content-kgxxwa" class="anchor" aria-hidden="true" href="#kgxxwa"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>KGxXWa</h2>
<p>A <a href="https://codepen.io/taroyanaka/pen/KGxXWa" rel="nofollow">Pen</a> by <a href="https://codepen.io/taroyanaka" rel="nofollow">taroyanaka</a> on <a href="https://codepen.io" rel="nofollow">CodePen</a>.</p>
<p><a href="https://codepen.io/taroyanaka/pen/KGxXWa/license" rel="nofollow">License</a>.</p>
</article>
  </div>

  </div>
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-script-js" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a class="btn btn-sm " href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/raw/db129c260c012b8956e839e8468066be02daf970/script.js">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg class="octicon octicon-gist" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-script-js">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              script.js
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-javascript ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-script-js-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-script-js-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">keys</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>}) <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-script-js-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">trim</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>   xyz  <span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;xyz&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-script-js-LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">map</span>(<span class="pl-c1">R</span>.<span class="pl-smi">trim</span>, <span class="pl-c1">R</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>x, y, z<span class="pl-pds">&#39;</span></span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-script-js-LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>);       <span class="pl-c"><span class="pl-c">//</span>=&gt;  5</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-script-js-LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">7</span>)(<span class="pl-c1">10</span>);      <span class="pl-c"><span class="pl-c">//</span>=&gt; 17</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-script-js-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> mapIndexed <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">addIndex</span>(<span class="pl-c1">R</span>.<span class="pl-smi">map</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-script-js-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-en">mapIndexed</span>((<span class="pl-smi">val</span>, <span class="pl-smi">idx</span>) <span class="pl-k">=&gt;</span> idx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> val, [<span class="pl-s"><span class="pl-pds">&#39;</span>f<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>o<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>o<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>r<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-script-js-LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;0-f&#39;, &#39;1-o&#39;, &#39;2-o&#39;, &#39;3-b&#39;, &#39;4-a&#39;, &#39;5-r&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-script-js-LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">adjust</span>(<span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">10</span>), <span class="pl-c1">1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 12, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-script-js-LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">adjust</span>(<span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">10</span>))(<span class="pl-c1">1</span>)([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 12, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-script-js-LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> equals3 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-script-js-LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">all</span>(equals3)([<span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-script-js-LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">all</span>(equals3)([<span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-script-js-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isQueen <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>rank<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Q<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-script-js-LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isSpade <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>suit<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>â ï¸<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-script-js-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isQueenOfSpades <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">allPass</span>([isQueen, isSpade]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-script-js-LC17" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-script-js-LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isQueenOfSpades</span>({rank<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Q<span class="pl-pds">&#39;</span></span>, suit<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>â£ï¸<span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-script-js-LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isQueenOfSpades</span>({rank<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Q<span class="pl-pds">&#39;</span></span>, suit<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>â ï¸<span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="file-script-js-LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> t <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">always</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Tee<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="file-script-js-LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t</span>(); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Tee&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="file-script-js-LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">and</span>(<span class="pl-c1">true</span>, <span class="pl-c1">true</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="file-script-js-LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">and</span>(<span class="pl-c1">true</span>, <span class="pl-c1">false</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="file-script-js-LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">and</span>(<span class="pl-c1">false</span>, <span class="pl-c1">true</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="file-script-js-LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">and</span>(<span class="pl-c1">false</span>, <span class="pl-c1">false</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="file-script-js-LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> lessThan0 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">flip</span>(<span class="pl-c1">R</span>.<span class="pl-smi">lt</span>)(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="file-script-js-LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> lessThan2 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">flip</span>(<span class="pl-c1">R</span>.<span class="pl-smi">lt</span>)(<span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="file-script-js-LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">any</span>(lessThan0)([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="file-script-js-LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">any</span>(lessThan2)([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="file-script-js-LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isClub <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>suit<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>â£<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="file-script-js-LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isSpade <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>suit<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>â <span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="file-script-js-LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isBlackCard <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">anyPass</span>([isClub, isSpade]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="file-script-js-LC33" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="file-script-js-LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isBlackCard</span>({rank<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>10<span class="pl-pds">&#39;</span></span>, suit<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>â£<span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="file-script-js-LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isBlackCard</span>({rank<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Q<span class="pl-pds">&#39;</span></span>, suit<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>â <span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="file-script-js-LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isBlackCard</span>({rank<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Q<span class="pl-pds">&#39;</span></span>, suit<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>â¦<span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="file-script-js-LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">ap</span>([<span class="pl-c1">R</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">2</span>), <span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">3</span>)], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 4, 6, 4, 5, 6]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="file-script-js-LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">ap</span>([<span class="pl-c1">R</span>.<span class="pl-c1">concat</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>tasty <span class="pl-pds">&#39;</span></span>), <span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>pizza<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>salad<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&quot;tasty pizza&quot;, &quot;tasty salad&quot;, &quot;PIZZA&quot;, &quot;SALAD&quot;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="file-script-js-LC39" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="file-script-js-LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> R.ap can also be used as S combinator</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="file-script-js-LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> when only two functions are passed</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="file-script-js-LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">ap</span>(<span class="pl-c1">R</span>.<span class="pl-smi">concat</span>, <span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>)(<span class="pl-s"><span class="pl-pds">&#39;</span>Ramda<span class="pl-pds">&#39;</span></span>) <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;RamdaRAMDA&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="file-script-js-LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">aperture</span>(<span class="pl-c1">2</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1, 2], [2, 3], [3, 4], [4, 5]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="file-script-js-LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">aperture</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1, 2, 3], [2, 3, 4], [3, 4, 5]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="file-script-js-LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">aperture</span>(<span class="pl-c1">7</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="file-script-js-LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">append</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>tests<span class="pl-pds">&#39;</span></span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>write<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>more<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;write&#39;, &#39;more&#39;, &#39;tests&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="file-script-js-LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">append</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>tests<span class="pl-pds">&#39;</span></span>, []); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;tests&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="file-script-js-LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">append</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>tests<span class="pl-pds">&#39;</span></span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>write<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>more<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;write&#39;, &#39;more&#39;, [&#39;tests&#39;]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="file-script-js-LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nums <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">99</span>, <span class="pl-c1">42</span>, <span class="pl-c1">6</span>, <span class="pl-c1">7</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="file-script-js-LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">max</span>, nums); <span class="pl-c"><span class="pl-c">//</span>=&gt; 42</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="file-script-js-LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> getMetrics <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">applySpec</span>({</td>
      </tr>
      <tr>
        <td id="file-script-js-L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="file-script-js-LC52" class="blob-code blob-code-inner js-file-line">  sum<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-smi">add</span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="file-script-js-LC53" class="blob-code blob-code-inner js-file-line">  nested<span class="pl-k">:</span> { mul<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-smi">multiply</span> }</td>
      </tr>
      <tr>
        <td id="file-script-js-L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="file-script-js-LC54" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="file-script-js-L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="file-script-js-LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getMetrics</span>(<span class="pl-c1">2</span>, <span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span> =&gt; { sum: 6, nested: { mul: 8 } }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="file-script-js-LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> t42 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">applyTo</span>(<span class="pl-c1">42</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="file-script-js-LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t42</span>(<span class="pl-c1">R</span>.<span class="pl-smi">identity</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 42</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="file-script-js-LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t42</span>(<span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">1</span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; 43</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="file-script-js-LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> byAge <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">ascend</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>age<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="file-script-js-LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> people <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="file-script-js-L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="file-script-js-LC61" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> ...</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="file-script-js-LC62" class="blob-code blob-code-inner js-file-line">];</td>
      </tr>
      <tr>
        <td id="file-script-js-L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="file-script-js-LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> peopleByYoungestFirst <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">sort</span>(byAge, people);</td>
      </tr>
      <tr>
        <td id="file-script-js-L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="file-script-js-LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">assoc</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">3</span>, {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, b: 2, c: 3}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="file-script-js-LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">assocPath</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>], <span class="pl-c1">42</span>, {a<span class="pl-k">:</span> {b<span class="pl-k">:</span> {c<span class="pl-k">:</span> <span class="pl-c1">0</span>}}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: {b: {c: 42}}}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="file-script-js-LC66" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="file-script-js-LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Any missing or non-object keys in path will be overridden</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="file-script-js-LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">assocPath</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>], <span class="pl-c1">42</span>, {a<span class="pl-k">:</span> <span class="pl-c1">5</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: {b: {c: 42}}}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="file-script-js-LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">takesThreeArgs</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>) {</td>
      </tr>
      <tr>
        <td id="file-script-js-L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="file-script-js-LC70" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> [a, b, c];</td>
      </tr>
      <tr>
        <td id="file-script-js-L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="file-script-js-LC71" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="file-script-js-LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">takesThreeArgs</span>.<span class="pl-c1">length</span>; <span class="pl-c"><span class="pl-c">//</span>=&gt; 3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="file-script-js-LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-en">takesThreeArgs</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="file-script-js-LC74" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="file-script-js-LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> takesTwoArgs <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">binary</span>(takesThreeArgs);</td>
      </tr>
      <tr>
        <td id="file-script-js-L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="file-script-js-LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">takesTwoArgs</span>.<span class="pl-c1">length</span>; <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="file-script-js-LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Only 2 arguments are passed to the wrapped function</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="file-script-js-LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-en">takesTwoArgs</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, undefined]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="file-script-js-LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> log <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">bind</span>(<span class="pl-en">console</span>.<span class="pl-smi">log</span>, <span class="pl-en">console</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="file-script-js-LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pipe</span>(<span class="pl-c1">R</span>.<span class="pl-en">assoc</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>), <span class="pl-c1">R</span>.<span class="pl-en">tap</span>(log), <span class="pl-c1">R</span>.<span class="pl-en">assoc</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">3</span>))({a<span class="pl-k">:</span> <span class="pl-c1">1</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 3}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="file-script-js-LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> logs {a: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="file-script-js-LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> gt10 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">10</span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="file-script-js-LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> lt20 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lt</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">20</span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="file-script-js-LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">both</span>(gt10, lt20);</td>
      </tr>
      <tr>
        <td id="file-script-js-L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="file-script-js-LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(<span class="pl-c1">15</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="file-script-js-LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(<span class="pl-c1">30</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="file-script-js-LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">call</span>(<span class="pl-c1">R</span>.<span class="pl-smi">add</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="file-script-js-LC88" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="file-script-js-LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> indentN <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">pipe</span>(<span class="pl-c1">R</span>.<span class="pl-en">repeat</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="file-script-js-LC90" class="blob-code blob-code-inner js-file-line">                     <span class="pl-c1">R</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="file-script-js-LC91" class="blob-code blob-code-inner js-file-line">                     <span class="pl-c1">R</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(?!<span class="pl-k">$</span>)<span class="pl-pds">/</span>gm</span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="file-script-js-LC92" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="file-script-js-LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> format <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">converge</span>(<span class="pl-c1">R</span>.<span class="pl-smi">call</span>, [</td>
      </tr>
      <tr>
        <td id="file-script-js-L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="file-script-js-LC94" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">R</span>.<span class="pl-en">pipe</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>indent<span class="pl-pds">&#39;</span></span>), indentN),</td>
      </tr>
      <tr>
        <td id="file-script-js-L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="file-script-js-LC95" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="file-script-js-LC96" class="blob-code blob-code-inner js-file-line">                        ]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="file-script-js-LC97" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="file-script-js-LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-en">format</span>({indent<span class="pl-k">:</span> <span class="pl-c1">2</span>, value<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-cce">\n</span>bar<span class="pl-cce">\n</span>baz<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;  foo\n  bar\n  baz\n&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="file-script-js-LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">duplicate</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> [n, n];</td>
      </tr>
      <tr>
        <td id="file-script-js-L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="file-script-js-LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">chain</span>(duplicate, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 1, 2, 2, 3, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="file-script-js-LC101" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="file-script-js-LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">chain</span>(<span class="pl-c1">R</span>.<span class="pl-smi">append</span>, <span class="pl-c1">R</span>.<span class="pl-smi">head</span>)([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3, 1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="file-script-js-LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">clamp</span>(<span class="pl-c1">1</span>, <span class="pl-c1">10</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>) <span class="pl-c"><span class="pl-c">//</span> =&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="file-script-js-LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">clamp</span>(<span class="pl-c1">1</span>, <span class="pl-c1">10</span>, <span class="pl-c1">15</span>) <span class="pl-c"><span class="pl-c">//</span> =&gt; 10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="file-script-js-LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">clamp</span>(<span class="pl-c1">1</span>, <span class="pl-c1">10</span>, <span class="pl-c1">4</span>)  <span class="pl-c"><span class="pl-c">//</span> =&gt; 4</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="file-script-js-LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> objects <span class="pl-k">=</span> [{}, {}, {}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="file-script-js-LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> objectsClone <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">clone</span>(objects);</td>
      </tr>
      <tr>
        <td id="file-script-js-L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="file-script-js-LC108" class="blob-code blob-code-inner js-file-line">objects <span class="pl-k">===</span> objectsClone; <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="file-script-js-LC109" class="blob-code blob-code-inner js-file-line">objects[<span class="pl-c1">0</span>] <span class="pl-k">===</span> objectsClone[<span class="pl-c1">0</span>]; <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="file-script-js-LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> byAge <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">comparator</span>((<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) <span class="pl-k">=&gt;</span> <span class="pl-smi">a</span>.<span class="pl-smi">age</span> <span class="pl-k">&lt;</span> <span class="pl-smi">b</span>.<span class="pl-smi">age</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="file-script-js-LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> people <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="file-script-js-L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="file-script-js-LC112" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> ...</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="file-script-js-LC113" class="blob-code blob-code-inner js-file-line">];</td>
      </tr>
      <tr>
        <td id="file-script-js-L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="file-script-js-LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> peopleByIncreasingAge <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">sort</span>(byAge, people);</td>
      </tr>
      <tr>
        <td id="file-script-js-L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="file-script-js-LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isNotNil <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">complement</span>(<span class="pl-c1">R</span>.<span class="pl-smi">isNil</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="file-script-js-LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isNil</span>(<span class="pl-c1">null</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="file-script-js-LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isNotNil</span>(<span class="pl-c1">null</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="file-script-js-LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isNil</span>(<span class="pl-c1">7</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="file-script-js-LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isNotNil</span>(<span class="pl-c1">7</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="file-script-js-LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">classyGreeting</span> <span class="pl-k">=</span> (<span class="pl-smi">firstName</span>, <span class="pl-smi">lastName</span>) <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">&quot;</span>The name&#39;s <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> lastName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> firstName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> lastName</td>
      </tr>
      <tr>
        <td id="file-script-js-L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="file-script-js-LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> yellGreeting <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>, classyGreeting);</td>
      </tr>
      <tr>
        <td id="file-script-js-L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="file-script-js-LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-en">yellGreeting</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>James<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Bond<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;THE NAME&#39;S BOND, JAMES BOND&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="file-script-js-LC123" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="file-script-js-LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">abs</span>, <span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">1</span>), <span class="pl-c1">R</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">2</span>))(<span class="pl-k">-</span><span class="pl-c1">4</span>) <span class="pl-c"><span class="pl-c">//</span>=&gt; 7</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="file-script-js-LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  get :: String -&gt; Object -&gt; Maybe *</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="file-script-js-LC126" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">var</span> get <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">curry</span>((<span class="pl-smi">propName</span>, <span class="pl-smi">obj</span>) <span class="pl-k">=&gt;</span> <span class="pl-en">Maybe</span>(obj[propName]))</td>
      </tr>
      <tr>
        <td id="file-script-js-L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="file-script-js-LC127" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="file-script-js-LC128" class="blob-code blob-code-inner js-file-line"> <span class="pl-c"><span class="pl-c">//</span>  getStateCode :: Maybe String -&gt; Maybe String</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="file-script-js-LC129" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">var</span> getStateCode <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">composeK</span>(</td>
      </tr>
      <tr>
        <td id="file-script-js-L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="file-script-js-LC130" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-smi">Maybe</span>.<span class="pl-smi">of</span>, <span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="file-script-js-LC131" class="blob-code blob-code-inner js-file-line">   <span class="pl-en">get</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>state<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="file-script-js-LC132" class="blob-code blob-code-inner js-file-line">   <span class="pl-en">get</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>address<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="file-script-js-LC133" class="blob-code blob-code-inner js-file-line">   <span class="pl-en">get</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>user<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="file-script-js-LC134" class="blob-code blob-code-inner js-file-line"> );</td>
      </tr>
      <tr>
        <td id="file-script-js-L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="file-script-js-LC135" class="blob-code blob-code-inner js-file-line"> <span class="pl-en">getStateCode</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>user<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>address<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>state<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ny<span class="pl-pds">&quot;</span></span>}}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; Maybe.Just(&quot;NY&quot;)</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="file-script-js-LC136" class="blob-code blob-code-inner js-file-line"> <span class="pl-en">getStateCode</span>({}); <span class="pl-c"><span class="pl-c">//</span>=&gt; Maybe.Nothing()</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="file-script-js-LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> db <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="file-script-js-LC138" class="blob-code blob-code-inner js-file-line">  users<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="file-script-js-LC139" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">JOE</span><span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="file-script-js-LC140" class="blob-code blob-code-inner js-file-line">      name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Joe<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="file-script-js-LC141" class="blob-code blob-code-inner js-file-line">      followers<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>STEVE<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>SUZY<span class="pl-pds">&#39;</span></span>]</td>
      </tr>
      <tr>
        <td id="file-script-js-L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="file-script-js-LC142" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="file-script-js-L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="file-script-js-LC143" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-script-js-L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="file-script-js-LC144" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-script-js-L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="file-script-js-LC145" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="file-script-js-LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We&#39;ll pretend to do a db lookup which returns a promise</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="file-script-js-LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">lookupUser</span> <span class="pl-k">=</span> (<span class="pl-smi">userId</span>) <span class="pl-k">=&gt;</span> <span class="pl-c1">Promise</span>.<span class="pl-c1">resolve</span>(<span class="pl-smi">db</span>.<span class="pl-smi">users</span>[userId])</td>
      </tr>
      <tr>
        <td id="file-script-js-L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="file-script-js-LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">lookupFollowers</span> <span class="pl-k">=</span> (<span class="pl-smi">user</span>) <span class="pl-k">=&gt;</span> <span class="pl-c1">Promise</span>.<span class="pl-c1">resolve</span>(<span class="pl-smi">user</span>.<span class="pl-smi">followers</span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="file-script-js-LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-en">lookupUser</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>JOE<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">then</span>(lookupFollowers)</td>
      </tr>
      <tr>
        <td id="file-script-js-L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="file-script-js-LC150" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="file-script-js-LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  followersForUser :: String -&gt; Promise [UserId]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="file-script-js-LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> followersForUser <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">composeP</span>(lookupFollowers, lookupUser);</td>
      </tr>
      <tr>
        <td id="file-script-js-L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="file-script-js-LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-en">followersForUser</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>JOE<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">then</span>(<span class="pl-smi">followers</span> <span class="pl-k">=&gt;</span> <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Followers:<span class="pl-pds">&#39;</span></span>, followers))</td>
      </tr>
      <tr>
        <td id="file-script-js-L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="file-script-js-LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Followers: [&quot;STEVE&quot;,&quot;SUZY&quot;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="file-script-js-LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">concat</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>ABC<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>DEF<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span> &#39;ABCDEF&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="file-script-js-LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">concat</span>([<span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [4, 5, 6, 1, 2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="file-script-js-LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">concat</span>([], []); <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="file-script-js-LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> fn <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">cond</span>([</td>
      </tr>
      <tr>
        <td id="file-script-js-L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="file-script-js-LC159" class="blob-code blob-code-inner js-file-line">  [<span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-c1">0</span>),   <span class="pl-c1">R</span>.<span class="pl-en">always</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>water freezes at 0Â°C<span class="pl-pds">&#39;</span></span>)],</td>
      </tr>
      <tr>
        <td id="file-script-js-L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="file-script-js-LC160" class="blob-code blob-code-inner js-file-line">  [<span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-c1">100</span>), <span class="pl-c1">R</span>.<span class="pl-en">always</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>water boils at 100Â°C<span class="pl-pds">&#39;</span></span>)],</td>
      </tr>
      <tr>
        <td id="file-script-js-L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="file-script-js-LC161" class="blob-code blob-code-inner js-file-line">  [<span class="pl-c1">R</span>.<span class="pl-c1">T</span>,           <span class="pl-smi">temp</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">&#39;</span>nothing special happens at <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> temp <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Â°C<span class="pl-pds">&#39;</span></span>]</td>
      </tr>
      <tr>
        <td id="file-script-js-L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="file-script-js-LC162" class="blob-code blob-code-inner js-file-line">]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="file-script-js-LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-en">fn</span>(<span class="pl-c1">0</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;water freezes at 0Â°C&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="file-script-js-LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-en">fn</span>(<span class="pl-c1">50</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;nothing special happens at 50Â°C&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="file-script-js-LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-en">fn</span>(<span class="pl-c1">100</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;water boils at 100Â°C&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="file-script-js-LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Constructor function</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="file-script-js-LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Animal</span>(<span class="pl-smi">kind</span>) {</td>
      </tr>
      <tr>
        <td id="file-script-js-L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="file-script-js-LC168" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-smi">kind</span> <span class="pl-k">=</span> kind;</td>
      </tr>
      <tr>
        <td id="file-script-js-L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="file-script-js-LC169" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="file-script-js-LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Animal</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">sighting</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="file-script-js-L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="file-script-js-LC171" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>It&#39;s a <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">this</span>.<span class="pl-smi">kind</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="file-script-js-LC172" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-script-js-L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="file-script-js-LC173" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="file-script-js-LC174" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> AnimalConstructor <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">construct</span>(Animal)</td>
      </tr>
      <tr>
        <td id="file-script-js-L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="file-script-js-LC175" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="file-script-js-LC176" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Notice we no longer need the &#39;new&#39; keyword:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="file-script-js-LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-en">AnimalConstructor</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Pig<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; {&quot;kind&quot;: &quot;Pig&quot;, &quot;sighting&quot;: function (){...}};</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="file-script-js-LC178" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="file-script-js-LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> animalTypes <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&quot;</span>Lion<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Tiger<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Bear<span class="pl-pds">&quot;</span></span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="file-script-js-LC180" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> animalSighting <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">invoker</span>(<span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>sighting<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="file-script-js-LC181" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sightNewAnimal <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(animalSighting, AnimalConstructor);</td>
      </tr>
      <tr>
        <td id="file-script-js-L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="file-script-js-LC182" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">map</span>(sightNewAnimal, animalTypes); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&quot;It&#39;s a Lion!&quot;, &quot;It&#39;s a Tiger!&quot;, &quot;It&#39;s a Bear!&quot;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="file-script-js-LC183" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Variadic Constructor function</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="file-script-js-LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Salad</span>() {</td>
      </tr>
      <tr>
        <td id="file-script-js-L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="file-script-js-LC185" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-smi">ingredients</span> <span class="pl-k">=</span> <span class="pl-c1">arguments</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="file-script-js-LC186" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-script-js-L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="file-script-js-LC187" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="file-script-js-LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Salad</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">recipe</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="file-script-js-L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="file-script-js-LC189" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> instructions <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">map</span>(<span class="pl-smi">ingredient</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Add a dollop of <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> ingredient, <span class="pl-c1">this</span>.<span class="pl-smi">ingredients</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="file-script-js-LC190" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">R</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>, instructions);</td>
      </tr>
      <tr>
        <td id="file-script-js-L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="file-script-js-LC191" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="file-script-js-LC192" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="file-script-js-LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ThreeLayerSalad <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">constructN</span>(<span class="pl-c1">3</span>, Salad);</td>
      </tr>
      <tr>
        <td id="file-script-js-L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="file-script-js-LC194" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="file-script-js-LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Notice we no longer need the &#39;new&#39; keyword, and the constructor is curried for 3 arguments.</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="file-script-js-LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> salad <span class="pl-k">=</span> <span class="pl-en">ThreeLayerSalad</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Mayonnaise<span class="pl-pds">&#39;</span></span>)(<span class="pl-s"><span class="pl-pds">&#39;</span>Potato Chips<span class="pl-pds">&#39;</span></span>)(<span class="pl-s"><span class="pl-pds">&#39;</span>Ketchup<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="file-script-js-LC197" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="file-script-js-LC198" class="blob-code blob-code-inner js-file-line"><span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-smi">salad</span>.<span class="pl-en">recipe</span>());</td>
      </tr>
      <tr>
        <td id="file-script-js-L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="file-script-js-LC199" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add a dollop of Mayonnaise</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="file-script-js-LC200" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add a dollop of Potato Chips</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="file-script-js-LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Add a dollop of Ketchup</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="file-script-js-LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">contains</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="file-script-js-LC203" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">contains</span>(<span class="pl-c1">4</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="file-script-js-LC204" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">contains</span>({ name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Fred<span class="pl-pds">&#39;</span></span> }, [{ name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Fred<span class="pl-pds">&#39;</span></span> }]); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="file-script-js-LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">contains</span>([<span class="pl-c1">42</span>], [[<span class="pl-c1">42</span>]]); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="file-script-js-LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> average <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">converge</span>(<span class="pl-c1">R</span>.<span class="pl-smi">divide</span>, [<span class="pl-c1">R</span>.<span class="pl-smi">sum</span>, <span class="pl-c1">R</span>.<span class="pl-c1">length</span>])</td>
      </tr>
      <tr>
        <td id="file-script-js-L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="file-script-js-LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-en">average</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>, <span class="pl-c1">7</span>]) <span class="pl-c"><span class="pl-c">//</span>=&gt; 4</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="file-script-js-LC208" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="file-script-js-LC209" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> strangeConcat <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">converge</span>(<span class="pl-c1">R</span>.<span class="pl-smi">concat</span>, [<span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>, <span class="pl-c1">R</span>.<span class="pl-smi">toLower</span>])</td>
      </tr>
      <tr>
        <td id="file-script-js-L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="file-script-js-LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-en">strangeConcat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Yodel<span class="pl-pds">&quot;</span></span>) <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;YODELyodel&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="file-script-js-LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> numbers <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.1</span>, <span class="pl-c1">1.2</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">3.0</span>, <span class="pl-c1">2.2</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="file-script-js-LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">countBy</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">floor</span>)(numbers);    <span class="pl-c"><span class="pl-c">//</span>=&gt; {&#39;1&#39;: 3, &#39;2&#39;: 2, &#39;3&#39;: 1}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="file-script-js-LC213" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="file-script-js-LC214" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> letters <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="file-script-js-LC215" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">countBy</span>(<span class="pl-c1">R</span>.<span class="pl-smi">toLower</span>)(letters);   <span class="pl-c"><span class="pl-c">//</span>=&gt; {&#39;a&#39;: 3, &#39;b&#39;: 2, &#39;c&#39;: 1}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="file-script-js-LC216" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">addFourNumbers</span> <span class="pl-k">=</span> (<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>, <span class="pl-smi">d</span>) <span class="pl-k">=&gt;</span> a <span class="pl-k">+</span> b <span class="pl-k">+</span> c <span class="pl-k">+</span> d;</td>
      </tr>
      <tr>
        <td id="file-script-js-L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="file-script-js-LC217" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="file-script-js-LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> curriedAddFourNumbers <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">curry</span>(addFourNumbers);</td>
      </tr>
      <tr>
        <td id="file-script-js-L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="file-script-js-LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-en">curriedAddFourNumbers</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="file-script-js-LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> g <span class="pl-k">=</span> <span class="pl-en">f</span>(<span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="file-script-js-LC221" class="blob-code blob-code-inner js-file-line"><span class="pl-en">g</span>(<span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="file-script-js-LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">sumArgs</span> <span class="pl-k">=</span> (<span class="pl-k">...</span><span class="pl-v">args</span>) <span class="pl-k">=&gt;</span> <span class="pl-c1">R</span>.<span class="pl-en">sum</span>(args);</td>
      </tr>
      <tr>
        <td id="file-script-js-L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="file-script-js-LC223" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="file-script-js-LC224" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> curriedAddFourNumbers <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">curryN</span>(<span class="pl-c1">4</span>, sumArgs);</td>
      </tr>
      <tr>
        <td id="file-script-js-L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="file-script-js-LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-en">curriedAddFourNumbers</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="file-script-js-LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> g <span class="pl-k">=</span> <span class="pl-en">f</span>(<span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="file-script-js-LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-en">g</span>(<span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="file-script-js-LC228" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dec</span>(<span class="pl-c1">42</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 41</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="file-script-js-LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> defaultTo42 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">defaultTo</span>(<span class="pl-c1">42</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="file-script-js-LC230" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="file-script-js-LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-en">defaultTo42</span>(<span class="pl-c1">null</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; 42</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="file-script-js-LC232" class="blob-code blob-code-inner js-file-line"><span class="pl-en">defaultTo42</span>(<span class="pl-c1">undefined</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; 42</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="file-script-js-LC233" class="blob-code blob-code-inner js-file-line"><span class="pl-en">defaultTo42</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Ramda<span class="pl-pds">&#39;</span></span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Ramda&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="file-script-js-LC234" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> parseInt(&#39;string&#39;) results in NaN</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="file-script-js-LC235" class="blob-code blob-code-inner js-file-line"><span class="pl-en">defaultTo42</span>(<span class="pl-c1">parseInt</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; 42</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="file-script-js-LC236" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> byAge <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">descend</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>age<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="file-script-js-LC237" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> people <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="file-script-js-L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="file-script-js-LC238" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> ...</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="file-script-js-LC239" class="blob-code blob-code-inner js-file-line">];</td>
      </tr>
      <tr>
        <td id="file-script-js-L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="file-script-js-LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> peopleByOldestFirst <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">sort</span>(byAge, people);</td>
      </tr>
      <tr>
        <td id="file-script-js-L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="file-script-js-LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">difference</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>], [<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1,2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="file-script-js-LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">difference</span>([<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [7,6,5]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="file-script-js-LC243" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">difference</span>([{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {b<span class="pl-k">:</span> <span class="pl-c1">2</span>}], [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {c<span class="pl-k">:</span> <span class="pl-c1">3</span>}]) <span class="pl-c"><span class="pl-c">//</span>=&gt; [{b: 2}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="file-script-js-LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">cmp</span> <span class="pl-k">=</span> (<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) <span class="pl-k">=&gt;</span> <span class="pl-smi">x</span>.<span class="pl-smi">a</span> <span class="pl-k">===</span> <span class="pl-smi">y</span>.<span class="pl-smi">a</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="file-script-js-LC245" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l1 <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">2</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">3</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="file-script-js-LC246" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l2 <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">3</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">4</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="file-script-js-LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">differenceWith</span>(cmp, l1, l2); <span class="pl-c"><span class="pl-c">//</span>=&gt; [{a: 1}, {a: 2}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="file-script-js-LC248" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dissoc</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, c: 3}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="file-script-js-LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dissocPath</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> {b<span class="pl-k">:</span> {c<span class="pl-k">:</span> <span class="pl-c1">42</span>}}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: {b: {}}}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="file-script-js-LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">divide</span>(<span class="pl-c1">71</span>, <span class="pl-c1">100</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 0.71</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="file-script-js-LC251" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="file-script-js-LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> half <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">divide</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="file-script-js-LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-en">half</span>(<span class="pl-c1">42</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 21</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="file-script-js-LC254" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="file-script-js-LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> reciprocal <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">divide</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="file-script-js-LC256" class="blob-code blob-code-inner js-file-line"><span class="pl-en">reciprocal</span>(<span class="pl-c1">4</span>);   <span class="pl-c"><span class="pl-c">//</span>=&gt; 0.25</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="file-script-js-LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">drop</span>(<span class="pl-c1">1</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="file-script-js-LC258" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">drop</span>(<span class="pl-c1">2</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="file-script-js-LC259" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">drop</span>(<span class="pl-c1">3</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="file-script-js-LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">drop</span>(<span class="pl-c1">4</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="file-script-js-LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">drop</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ramda<span class="pl-pds">&#39;</span></span>);               <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;da&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="file-script-js-LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropLast</span>(<span class="pl-c1">1</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="file-script-js-LC263" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropLast</span>(<span class="pl-c1">2</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="file-script-js-LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropLast</span>(<span class="pl-c1">3</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="file-script-js-LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropLast</span>(<span class="pl-c1">4</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="file-script-js-LC266" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropLast</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ramda<span class="pl-pds">&#39;</span></span>);               <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;ra&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="file-script-js-LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">lteThree</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">&lt;=</span> <span class="pl-c1">3</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="file-script-js-LC268" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="file-script-js-LC269" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropLastWhile</span>(lteThree, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="file-script-js-LC270" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="file-script-js-LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropLastWhile</span>(<span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span> , <span class="pl-s"><span class="pl-pds">&#39;</span>Ramda<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Ramd&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="file-script-js-LC272" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropRepeats</span>([<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">4</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3, 4, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="file-script-js-LC273" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>, <span class="pl-c1">5</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="file-script-js-LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropRepeatsWith</span>(<span class="pl-c1">R</span>.<span class="pl-en">eqBy</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">abs</span>), l); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 3, 4, -5, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="file-script-js-LC275" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">lteTwo</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">&lt;=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="file-script-js-LC276" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="file-script-js-LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropWhile</span>(lteTwo, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [3, 4, 3, 2, 1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="file-script-js-LC278" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="file-script-js-LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">dropWhile</span>(<span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span> , <span class="pl-s"><span class="pl-pds">&#39;</span>Ramda<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;da&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="file-script-js-LC280" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">gt10</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">&gt;</span> <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="file-script-js-LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">even</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="file-script-js-LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">either</span>(gt10, even);</td>
      </tr>
      <tr>
        <td id="file-script-js-L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="file-script-js-LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(<span class="pl-c1">101</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="file-script-js-LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(<span class="pl-c1">8</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="file-script-js-LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">empty</span>(<span class="pl-en">Just</span>(<span class="pl-c1">42</span>));      <span class="pl-c"><span class="pl-c">//</span>=&gt; Nothing()</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="file-script-js-LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">empty</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="file-script-js-LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">empty</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>unicorns<span class="pl-pds">&#39;</span></span>);    <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="file-script-js-LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">empty</span>({x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; {}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="file-script-js-LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">endsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>)                <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="file-script-js-LC290" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">endsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>)                <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="file-script-js-LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">endsWith</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>])    <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="file-script-js-LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">endsWith</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>])    <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="file-script-js-LC293" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">eqBy</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">abs</span>, <span class="pl-c1">5</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="file-script-js-LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> o1 <span class="pl-k">=</span> { a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span> };</td>
      </tr>
      <tr>
        <td id="file-script-js-L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="file-script-js-LC295" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> o2 <span class="pl-k">=</span> { a<span class="pl-k">:</span> <span class="pl-c1">10</span>, b<span class="pl-k">:</span> <span class="pl-c1">20</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">40</span> };</td>
      </tr>
      <tr>
        <td id="file-script-js-L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="file-script-js-LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">eqProps</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, o1, o2); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="file-script-js-LC297" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">eqProps</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, o1, o2); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="file-script-js-LC298" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="file-script-js-LC299" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="file-script-js-LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">equals</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="file-script-js-LC301" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="file-script-js-LC302" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a <span class="pl-k">=</span> {}; <span class="pl-smi">a</span>.<span class="pl-smi">v</span> <span class="pl-k">=</span> a;</td>
      </tr>
      <tr>
        <td id="file-script-js-L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="file-script-js-LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b <span class="pl-k">=</span> {}; <span class="pl-smi">b</span>.<span class="pl-smi">v</span> <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="file-script-js-L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="file-script-js-LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">equals</span>(a, b); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="file-script-js-LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> tomato  <span class="pl-k">=</span> {firstName<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>  Tomato <span class="pl-pds">&#39;</span></span>, data<span class="pl-k">:</span> {elapsed<span class="pl-k">:</span> <span class="pl-c1">100</span>, remaining<span class="pl-k">:</span> <span class="pl-c1">1400</span>}, id<span class="pl-k">:</span><span class="pl-c1">123</span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="file-script-js-LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> transformations <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="file-script-js-LC307" class="blob-code blob-code-inner js-file-line">  firstName<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-smi">trim</span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="file-script-js-LC308" class="blob-code blob-code-inner js-file-line">  lastName<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-smi">trim</span>, <span class="pl-c"><span class="pl-c">//</span> Will not get invoked.</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="file-script-js-LC309" class="blob-code blob-code-inner js-file-line">  data<span class="pl-k">:</span> {elapsed<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">1</span>), remaining<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>)}</td>
      </tr>
      <tr>
        <td id="file-script-js-L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="file-script-js-LC310" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="file-script-js-LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">evolve</span>(transformations, tomato); <span class="pl-c"><span class="pl-c">//</span>=&gt; {firstName: &#39;Tomato&#39;, data: {elapsed: 101, remaining: 1399}, id:123}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="file-script-js-LC312" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">F</span>(); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="file-script-js-LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isEven</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> n <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="file-script-js-LC314" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="file-script-js-LC315" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">filter</span>(isEven, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="file-script-js-LC316" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="file-script-js-LC317" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">filter</span>(isEven, {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {b: 2, d: 4}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="file-script-js-LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xs <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">2</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">3</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="file-script-js-LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">find</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="file-script-js-LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">find</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">4</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="file-script-js-LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xs <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">2</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">3</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="file-script-js-LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">findIndex</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="file-script-js-LC323" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">findIndex</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">4</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; -1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="file-script-js-LC324" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xs <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">0</span>}, {a<span class="pl-k">:</span><span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">1</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="file-script-js-LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">findLast</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, b: 1}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="file-script-js-LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">findLast</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">4</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="file-script-js-LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xs <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">0</span>}, {a<span class="pl-k">:</span><span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">1</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="file-script-js-LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">findLastIndex</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="file-script-js-LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">findLastIndex</span>(<span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">4</span>))(xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; -1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="file-script-js-LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">flatten</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>], <span class="pl-c1">5</span>, [<span class="pl-c1">6</span>, [<span class="pl-c1">7</span>, <span class="pl-c1">8</span>, [<span class="pl-c1">9</span>, [<span class="pl-c1">10</span>, <span class="pl-c1">11</span>], <span class="pl-c1">12</span>]]]]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="file-script-js-LC331" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="file-script-js-LC332" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">mergeThree</span> <span class="pl-k">=</span> (<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>) <span class="pl-k">=&gt;</span> [].<span class="pl-c1">concat</span>(a, b, c);</td>
      </tr>
      <tr>
        <td id="file-script-js-L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="file-script-js-LC333" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="file-script-js-LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-en">mergeThree</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="file-script-js-LC335" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="file-script-js-LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">flip</span>(mergeThree)(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 1, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="file-script-js-LC337" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">printXPlusFive</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> <span class="pl-en">console</span>.<span class="pl-c1">log</span>(x <span class="pl-k">+</span> <span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="file-script-js-LC338" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">forEach</span>(printXPlusFive, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="file-script-js-LC339" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> logs 6</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="file-script-js-LC340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> logs 7</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="file-script-js-LC341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> logs 8</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="file-script-js-LC342" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">printKeyConcatValue</span> <span class="pl-k">=</span> (<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) <span class="pl-k">=&gt;</span> <span class="pl-en">console</span>.<span class="pl-c1">log</span>(key <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> value);</td>
      </tr>
      <tr>
        <td id="file-script-js-L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="file-script-js-LC343" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">forEachObjIndexed</span>(printKeyConcatValue, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: 1, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="file-script-js-LC344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> logs x:1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="file-script-js-LC345" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> logs y:2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="file-script-js-LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">fromPairs</span>([[<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">3</span>]]); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, b: 2, c: 3}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="file-script-js-LC347" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> byGrade <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">groupBy</span>(<span class="pl-k">function</span>(<span class="pl-smi">student</span>) {</td>
      </tr>
      <tr>
        <td id="file-script-js-L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="file-script-js-LC348" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> score <span class="pl-k">=</span> <span class="pl-smi">student</span>.<span class="pl-smi">score</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="file-script-js-LC349" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> score <span class="pl-k">&lt;</span> <span class="pl-c1">65</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>F<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="file-script-js-LC350" class="blob-code blob-code-inner js-file-line">         score <span class="pl-k">&lt;</span> <span class="pl-c1">70</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>D<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="file-script-js-LC351" class="blob-code blob-code-inner js-file-line">         score <span class="pl-k">&lt;</span> <span class="pl-c1">80</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>C<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="file-script-js-LC352" class="blob-code blob-code-inner js-file-line">         score <span class="pl-k">&lt;</span> <span class="pl-c1">90</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="file-script-js-LC353" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="file-script-js-L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="file-script-js-LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> students <span class="pl-k">=</span> [{name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Abby<span class="pl-pds">&#39;</span></span>, score<span class="pl-k">:</span> <span class="pl-c1">84</span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="file-script-js-LC355" class="blob-code blob-code-inner js-file-line">                {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Eddy<span class="pl-pds">&#39;</span></span>, score<span class="pl-k">:</span> <span class="pl-c1">58</span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="file-script-js-LC356" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> ...</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="file-script-js-LC357" class="blob-code blob-code-inner js-file-line">                {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Jack<span class="pl-pds">&#39;</span></span>, score<span class="pl-k">:</span> <span class="pl-c1">69</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="file-script-js-LC358" class="blob-code blob-code-inner js-file-line"><span class="pl-en">byGrade</span>(students);</td>
      </tr>
      <tr>
        <td id="file-script-js-L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="file-script-js-LC359" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="file-script-js-LC360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   &#39;A&#39;: [{name: &#39;Dianne&#39;, score: 99}],</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="file-script-js-LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   &#39;B&#39;: [{name: &#39;Abby&#39;, score: 84}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="file-script-js-LC362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   // ...,</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="file-script-js-LC363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   &#39;F&#39;: [{name: &#39;Eddy&#39;, score: 58}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="file-script-js-LC364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="file-script-js-LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">groupWith</span>(<span class="pl-c1">R</span>.<span class="pl-smi">equals</span>, [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">8</span>, <span class="pl-c1">13</span>, <span class="pl-c1">21</span>])</td>
      </tr>
      <tr>
        <td id="file-script-js-L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="file-script-js-LC366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [[0], [1, 1], [2], [3], [5], [8], [13], [21]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="file-script-js-LC367" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="file-script-js-LC368" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">groupWith</span>((<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) <span class="pl-k">=&gt;</span> a <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">===</span> b, [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">8</span>, <span class="pl-c1">13</span>, <span class="pl-c1">21</span>])</td>
      </tr>
      <tr>
        <td id="file-script-js-L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="file-script-js-LC369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [[0, 1], [1, 2, 3], [5], [8], [13], [21]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="file-script-js-LC370" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="file-script-js-LC371" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">groupWith</span>((<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) <span class="pl-k">=&gt;</span> a <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> b <span class="pl-k">%</span> <span class="pl-c1">2</span>, [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">8</span>, <span class="pl-c1">13</span>, <span class="pl-c1">21</span>])</td>
      </tr>
      <tr>
        <td id="file-script-js-L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="file-script-js-LC372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [[0], [1, 1], [2], [3, 5], [8], [13, 21]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="file-script-js-LC373" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="file-script-js-LC374" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">groupWith</span>(<span class="pl-c1">R</span>.<span class="pl-en">eqBy</span>(isVowel), <span class="pl-s"><span class="pl-pds">&#39;</span>aestiou<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="file-script-js-LC375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;ae&#39;, &#39;st&#39;, &#39;iou&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="file-script-js-LC376" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="file-script-js-LC377" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="file-script-js-LC378" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="file-script-js-LC379" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="file-script-js-LC380" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="file-script-js-LC381" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gte</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="file-script-js-LC382" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gte</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="file-script-js-LC383" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gte</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="file-script-js-LC384" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gte</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="file-script-js-LC385" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">gte</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="file-script-js-LC386" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> hasName <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">has</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="file-script-js-LC387" class="blob-code blob-code-inner js-file-line"><span class="pl-en">hasName</span>({name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>alice<span class="pl-pds">&#39;</span></span>});   <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="file-script-js-LC388" class="blob-code blob-code-inner js-file-line"><span class="pl-en">hasName</span>({name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bob<span class="pl-pds">&#39;</span></span>});     <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="file-script-js-LC389" class="blob-code blob-code-inner js-file-line"><span class="pl-en">hasName</span>({});                <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="file-script-js-LC390" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="file-script-js-LC391" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> point <span class="pl-k">=</span> {x<span class="pl-k">:</span> <span class="pl-c1">0</span>, y<span class="pl-k">:</span> <span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="file-script-js-LC392" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> pointHas <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">has</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, point);</td>
      </tr>
      <tr>
        <td id="file-script-js-L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="file-script-js-LC393" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pointHas</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="file-script-js-LC394" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pointHas</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="file-script-js-LC395" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pointHas</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="file-script-js-LC396" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Rectangle</span>(<span class="pl-smi">width</span>, <span class="pl-smi">height</span>) {</td>
      </tr>
      <tr>
        <td id="file-script-js-L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="file-script-js-LC397" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-c1">width</span> <span class="pl-k">=</span> width;</td>
      </tr>
      <tr>
        <td id="file-script-js-L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="file-script-js-LC398" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-c1">height</span> <span class="pl-k">=</span> height;</td>
      </tr>
      <tr>
        <td id="file-script-js-L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="file-script-js-LC399" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-script-js-L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="file-script-js-LC400" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Rectangle</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">area</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="file-script-js-L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="file-script-js-LC401" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">width</span> <span class="pl-k">*</span> <span class="pl-c1">this</span>.<span class="pl-c1">height</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="file-script-js-LC402" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="file-script-js-LC403" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="file-script-js-LC404" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> square <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Rectangle</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="file-script-js-LC405" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">hasIn</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>, square);  <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="file-script-js-LC406" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">hasIn</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>area<span class="pl-pds">&#39;</span></span>, square);  <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="file-script-js-LC407" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">head</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>fi<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fum<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;fi&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="file-script-js-LC408" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">head</span>([]); <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="file-script-js-LC409" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="file-script-js-LC410" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">head</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;a&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="file-script-js-LC411" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">head</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="file-script-js-LC412" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> o <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="file-script-js-L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="file-script-js-LC413" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identical</span>(o, o); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="file-script-js-LC414" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identical</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="file-script-js-LC415" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identical</span>(<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="file-script-js-LC416" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identical</span>([], []); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="file-script-js-LC417" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identical</span>(<span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">0</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="file-script-js-LC418" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identical</span>(<span class="pl-c1">NaN</span>, <span class="pl-c1">NaN</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="file-script-js-LC419" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identity</span>(<span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="file-script-js-LC420" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="file-script-js-LC421" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> obj <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="file-script-js-L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="file-script-js-LC422" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">identity</span>(obj) <span class="pl-k">===</span> obj; <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="file-script-js-LC423" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> incCount <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">ifElse</span>(</td>
      </tr>
      <tr>
        <td id="file-script-js-L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="file-script-js-LC424" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-c1">has</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>count<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="file-script-js-LC425" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">over</span>(<span class="pl-c1">R</span>.<span class="pl-en">lensProp</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>count<span class="pl-pds">&#39;</span></span>), <span class="pl-c1">R</span>.<span class="pl-smi">inc</span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="file-script-js-LC426" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">assoc</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>count<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="file-script-js-LC427" class="blob-code blob-code-inner js-file-line">);</td>
      </tr>
      <tr>
        <td id="file-script-js-L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="file-script-js-LC428" class="blob-code blob-code-inner js-file-line"><span class="pl-en">incCount</span>({});           <span class="pl-c"><span class="pl-c">//</span>=&gt; { count: 1 }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="file-script-js-LC429" class="blob-code blob-code-inner js-file-line"><span class="pl-en">incCount</span>({ count<span class="pl-k">:</span> <span class="pl-c1">1</span> }); <span class="pl-c"><span class="pl-c">//</span>=&gt; { count: 2 }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="file-script-js-LC430" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">inc</span>(<span class="pl-c1">42</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 43</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="file-script-js-LC431" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> list <span class="pl-k">=</span> [{id<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>xyz<span class="pl-pds">&#39;</span></span>, title<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>}, {id<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>, title<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="file-script-js-LC432" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">indexBy</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>id<span class="pl-pds">&#39;</span></span>), list);</td>
      </tr>
      <tr>
        <td id="file-script-js-L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="file-script-js-LC433" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; {abc: {id: &#39;abc&#39;, title: &#39;B&#39;}, xyz: {id: &#39;xyz&#39;, title: &#39;A&#39;}}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="file-script-js-LC434" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">indexOf</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="file-script-js-LC435" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">indexOf</span>(<span class="pl-c1">10</span>, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; -1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="file-script-js-LC436" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);  <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="file-script-js-LC437" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="file-script-js-LC438" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>([<span class="pl-c1">1</span>]);        <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="file-script-js-LC439" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>([]);         <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="file-script-js-LC440" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="file-script-js-LC441" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;ab&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="file-script-js-LC442" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>ab<span class="pl-pds">&#39;</span></span>);   <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;a&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="file-script-js-LC443" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>);    <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="file-script-js-LC444" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">init</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);     <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="file-script-js-LC445" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">innerJoin</span>(</td>
      </tr>
      <tr>
        <td id="file-script-js-L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="file-script-js-LC446" class="blob-code blob-code-inner js-file-line">  (<span class="pl-smi">record</span>, <span class="pl-smi">id</span>) <span class="pl-k">=&gt;</span> <span class="pl-smi">record</span>.<span class="pl-c1">id</span> <span class="pl-k">===</span> id,</td>
      </tr>
      <tr>
        <td id="file-script-js-L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="file-script-js-LC447" class="blob-code blob-code-inner js-file-line">  [{id<span class="pl-k">:</span> <span class="pl-c1">824</span>, name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Richie Furay<span class="pl-pds">&#39;</span></span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="file-script-js-LC448" class="blob-code blob-code-inner js-file-line">   {id<span class="pl-k">:</span> <span class="pl-c1">956</span>, name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Dewey Martin<span class="pl-pds">&#39;</span></span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="file-script-js-LC449" class="blob-code blob-code-inner js-file-line">   {id<span class="pl-k">:</span> <span class="pl-c1">313</span>, name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Bruce Palmer<span class="pl-pds">&#39;</span></span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="file-script-js-LC450" class="blob-code blob-code-inner js-file-line">   {id<span class="pl-k">:</span> <span class="pl-c1">456</span>, name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Stephen Stills<span class="pl-pds">&#39;</span></span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="file-script-js-LC451" class="blob-code blob-code-inner js-file-line">   {id<span class="pl-k">:</span> <span class="pl-c1">177</span>, name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Neil Young<span class="pl-pds">&#39;</span></span>}],</td>
      </tr>
      <tr>
        <td id="file-script-js-L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="file-script-js-LC452" class="blob-code blob-code-inner js-file-line">  [<span class="pl-c1">177</span>, <span class="pl-c1">456</span>, <span class="pl-c1">999</span>]</td>
      </tr>
      <tr>
        <td id="file-script-js-L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="file-script-js-LC453" class="blob-code blob-code-inner js-file-line">);</td>
      </tr>
      <tr>
        <td id="file-script-js-L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="file-script-js-LC454" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [{id: 456, name: &#39;Stephen Stills&#39;}, {id: 177, name: &#39;Neil Young&#39;}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="file-script-js-LC455" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">insert</span>(<span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1,2,&#39;x&#39;,3,4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="file-script-js-LC456" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">insertAll</span>(<span class="pl-c1">2</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1,2,&#39;x&#39;,&#39;y&#39;,&#39;z&#39;,3,4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="file-script-js-LC457" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">intersection</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>], [<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [4, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="file-script-js-LC458" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">intersperse</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>n<span class="pl-pds">&#39;</span></span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>ba<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;ba&#39;, &#39;n&#39;, &#39;a&#39;, &#39;n&#39;, &#39;a&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="file-script-js-LC459" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> numbers <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="file-script-js-LC460" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> transducer <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-c1">R</span>.<span class="pl-en">map</span>(<span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">1</span>)), <span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="file-script-js-LC461" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="file-script-js-LC462" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">into</span>([], transducer, numbers); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="file-script-js-LC463" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="file-script-js-LC464" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> intoArray <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">into</span>([]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="file-script-js-LC465" class="blob-code blob-code-inner js-file-line"><span class="pl-en">intoArray</span>(transducer, numbers); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="file-script-js-LC466" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> raceResultsByFirstName <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="file-script-js-LC467" class="blob-code blob-code-inner js-file-line">  first<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>alice<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="file-script-js-LC468" class="blob-code blob-code-inner js-file-line">  second<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>jake<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="file-script-js-LC469" class="blob-code blob-code-inner js-file-line">  third<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>alice<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="file-script-js-LC470" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="file-script-js-LC471" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">invert</span>(raceResultsByFirstName);</td>
      </tr>
      <tr>
        <td id="file-script-js-L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="file-script-js-LC472" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { &#39;alice&#39;: [&#39;first&#39;, &#39;third&#39;], &#39;jake&#39;:[&#39;second&#39;] }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="file-script-js-LC473" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> raceResults <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="file-script-js-LC474" class="blob-code blob-code-inner js-file-line">  first<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>alice<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="file-script-js-LC475" class="blob-code blob-code-inner js-file-line">  second<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>jake<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="file-script-js-L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="file-script-js-LC476" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="file-script-js-LC477" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">invertObj</span>(raceResults);</td>
      </tr>
      <tr>
        <td id="file-script-js-L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="file-script-js-LC478" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { &#39;alice&#39;: &#39;first&#39;, &#39;jake&#39;:&#39;second&#39; }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="file-script-js-LC479" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="file-script-js-LC480" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Alternatively:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="file-script-js-LC481" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> raceResults <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>alice<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>jake<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="file-script-js-LC482" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">invertObj</span>(raceResults);</td>
      </tr>
      <tr>
        <td id="file-script-js-L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="file-script-js-LC483" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { &#39;alice&#39;: &#39;0&#39;, &#39;jake&#39;:&#39;1&#39; }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="file-script-js-LC484" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sliceFrom <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">invoker</span>(<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>slice<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="file-script-js-LC485" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sliceFrom</span>(<span class="pl-c1">6</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abcdefghijklm<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;ghijklm&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="file-script-js-LC486" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sliceFrom6 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">invoker</span>(<span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>slice<span class="pl-pds">&#39;</span></span>)(<span class="pl-c1">6</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="file-script-js-LC487" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sliceFrom6</span>(<span class="pl-c1">8</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abcdefghijklm<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;gh&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="file-script-js-LC488" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">Object</span>, {}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="file-script-js-LC489" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">Number</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="file-script-js-LC490" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">Object</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="file-script-js-LC491" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">String</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>s<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="file-script-js-LC492" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">String</span>, <span class="pl-k">new</span> <span class="pl-en">String</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="file-script-js-LC493" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">Object</span>, <span class="pl-k">new</span> <span class="pl-en">String</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="file-script-js-LC494" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">Object</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>s<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="file-script-js-LC495" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">is</span>(<span class="pl-c1">Number</span>, {}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="file-script-js-LC496" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isEmpty</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);   <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="file-script-js-LC497" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isEmpty</span>([]);          <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="file-script-js-LC498" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isEmpty</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);          <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="file-script-js-LC499" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isEmpty</span>(<span class="pl-c1">null</span>);        <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="file-script-js-LC500" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isEmpty</span>({});          <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="file-script-js-LC501" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isEmpty</span>({length<span class="pl-k">:</span> <span class="pl-c1">0</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="file-script-js-LC502" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isNil</span>(<span class="pl-c1">null</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="file-script-js-LC503" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isNil</span>(<span class="pl-c1">undefined</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="file-script-js-LC504" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isNil</span>(<span class="pl-c1">0</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="file-script-js-LC505" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">isNil</span>([]); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="file-script-js-LC506" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> spacer <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="file-script-js-LC507" class="blob-code blob-code-inner js-file-line"><span class="pl-en">spacer</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>, <span class="pl-c1">3.4</span>]);   <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;a 2 3.4&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="file-script-js-LC508" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>|<span class="pl-pds">&#39;</span></span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);    <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;1|2|3&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="file-script-js-LC509" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> getRange <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">juxt</span>([<span class="pl-c1">Math</span>.<span class="pl-smi">min</span>, <span class="pl-c1">Math</span>.<span class="pl-smi">max</span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="file-script-js-LC510" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getRange</span>(<span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">9</span>, <span class="pl-k">-</span><span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [-3, 9]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="file-script-js-LC511" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">keysIn</span>(f); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;x&#39;, &#39;y&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="file-script-js-LC512" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">last</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>fi<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fum<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;fum&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="file-script-js-LC513" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">last</span>([]); <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="file-script-js-LC514" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="file-script-js-LC515" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">last</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;c&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="file-script-js-LC516" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">last</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="file-script-js-LC517" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-c1">3</span>, [<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 6</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="file-script-js-LC518" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-c1">10</span>, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; -1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="file-script-js-LC519" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">length</span>([]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 0</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="file-script-js-LC520" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">length</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="file-script-js-LC521" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xLens <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lens</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>), <span class="pl-c1">R</span>.<span class="pl-en">assoc</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="file-script-js-LC522" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="file-script-js-LC523" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">view</span>(xLens, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});            <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="file-script-js-LC524" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">set</span>(xLens, <span class="pl-c1">4</span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});          <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: 4, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="file-script-js-LC525" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">over</span>(xLens, <span class="pl-c1">R</span>.<span class="pl-smi">negate</span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: -1, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="file-script-js-LC526" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> headLens <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lensIndex</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="file-script-js-LC527" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="file-script-js-LC528" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">view</span>(headLens, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>]);            <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;a&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="file-script-js-LC529" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">set</span>(headLens, <span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>]);        <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;x&#39;, &#39;b&#39;, &#39;c&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="file-script-js-LC530" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">over</span>(headLens, <span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;A&#39;, &#39;b&#39;, &#39;c&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="file-script-js-LC531" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xHeadYLens <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lensPath</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="file-script-js-LC532" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="file-script-js-LC533" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">view</span>(xHeadYLens, {x<span class="pl-k">:</span> [{y<span class="pl-k">:</span> <span class="pl-c1">2</span>, z<span class="pl-k">:</span> <span class="pl-c1">3</span>}, {y<span class="pl-k">:</span> <span class="pl-c1">4</span>, z<span class="pl-k">:</span> <span class="pl-c1">5</span>}]});</td>
      </tr>
      <tr>
        <td id="file-script-js-L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="file-script-js-LC534" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="file-script-js-LC535" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">set</span>(xHeadYLens, <span class="pl-c1">1</span>, {x<span class="pl-k">:</span> [{y<span class="pl-k">:</span> <span class="pl-c1">2</span>, z<span class="pl-k">:</span> <span class="pl-c1">3</span>}, {y<span class="pl-k">:</span> <span class="pl-c1">4</span>, z<span class="pl-k">:</span> <span class="pl-c1">5</span>}]});</td>
      </tr>
      <tr>
        <td id="file-script-js-L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="file-script-js-LC536" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; {x: [{y: 1, z: 3}, {y: 4, z: 5}]}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="file-script-js-LC537" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">over</span>(xHeadYLens, <span class="pl-c1">R</span>.<span class="pl-smi">negate</span>, {x<span class="pl-k">:</span> [{y<span class="pl-k">:</span> <span class="pl-c1">2</span>, z<span class="pl-k">:</span> <span class="pl-c1">3</span>}, {y<span class="pl-k">:</span> <span class="pl-c1">4</span>, z<span class="pl-k">:</span> <span class="pl-c1">5</span>}]});</td>
      </tr>
      <tr>
        <td id="file-script-js-L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="file-script-js-LC538" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; {x: [{y: -2, z: 3}, {y: 4, z: 5}]}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="file-script-js-LC539" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xLens <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lensProp</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="file-script-js-LC540" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="file-script-js-LC541" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">view</span>(xLens, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});            <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="file-script-js-LC542" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">set</span>(xLens, <span class="pl-c1">4</span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});          <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: 4, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="file-script-js-LC543" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">over</span>(xLens, <span class="pl-c1">R</span>.<span class="pl-smi">negate</span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: -1, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="file-script-js-LC544" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> madd3 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lift</span>((<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>) <span class="pl-k">=&gt;</span> a <span class="pl-k">+</span> b <span class="pl-k">+</span> c);</td>
      </tr>
      <tr>
        <td id="file-script-js-L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="file-script-js-LC545" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="file-script-js-LC546" class="blob-code blob-code-inner js-file-line"><span class="pl-en">madd3</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], [<span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [3, 4, 5, 4, 5, 6, 5, 6, 7]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="file-script-js-LC547" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="file-script-js-LC548" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> madd5 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lift</span>((<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>, <span class="pl-smi">d</span>, <span class="pl-smi">e</span>) <span class="pl-k">=&gt;</span> a <span class="pl-k">+</span> b <span class="pl-k">+</span> c <span class="pl-k">+</span> d <span class="pl-k">+</span> e);</td>
      </tr>
      <tr>
        <td id="file-script-js-L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="file-script-js-LC549" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="file-script-js-LC550" class="blob-code blob-code-inner js-file-line"><span class="pl-en">madd5</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>], [<span class="pl-c1">3</span>], [<span class="pl-c1">4</span>, <span class="pl-c1">5</span>], [<span class="pl-c1">6</span>], [<span class="pl-c1">7</span>, <span class="pl-c1">8</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [21, 22, 22, 23, 22, 23, 23, 24]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="file-script-js-LC551" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> madd3 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">liftN</span>(<span class="pl-c1">3</span>, (<span class="pl-k">...</span><span class="pl-v">args</span>) <span class="pl-k">=&gt;</span> <span class="pl-c1">R</span>.<span class="pl-en">sum</span>(args));</td>
      </tr>
      <tr>
        <td id="file-script-js-L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="file-script-js-LC552" class="blob-code blob-code-inner js-file-line"><span class="pl-en">madd3</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], [<span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [3, 4, 5, 4, 5, 6, 5, 6, 7]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="file-script-js-LC553" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lt</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="file-script-js-LC554" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lt</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="file-script-js-LC555" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lt</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="file-script-js-LC556" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lt</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="file-script-js-LC557" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lt</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="file-script-js-LC558" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lte</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="file-script-js-LC559" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lte</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="file-script-js-LC560" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lte</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="file-script-js-LC561" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lte</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="file-script-js-LC562" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">lte</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="file-script-js-LC563" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">double</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">*</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="file-script-js-LC564" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="file-script-js-LC565" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">map</span>(double, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 4, 6]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="file-script-js-LC566" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="file-script-js-LC567" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">map</span>(double, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>, z<span class="pl-k">:</span> <span class="pl-c1">3</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: 2, y: 4, z: 6}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="file-script-js-LC568" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> digits <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>2<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>3<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>4<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="file-script-js-LC569" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">appender</span> <span class="pl-k">=</span> (<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) <span class="pl-k">=&gt;</span> [a <span class="pl-k">+</span> b, a <span class="pl-k">+</span> b];</td>
      </tr>
      <tr>
        <td id="file-script-js-L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="file-script-js-LC570" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="file-script-js-LC571" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mapAccum</span>(appender, <span class="pl-c1">0</span>, digits); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;01234&#39;, [&#39;01&#39;, &#39;012&#39;, &#39;0123&#39;, &#39;01234&#39;]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="file-script-js-LC572" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> digits <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>2<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>3<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>4<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="file-script-js-LC573" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>var append = (a, b) =&gt; [a + b, a + b];</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="file-script-js-LC574" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="file-script-js-LC575" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mapAccumRight</span>(append, <span class="pl-c1">5</span>, digits); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[&#39;12345&#39;, &#39;2345&#39;, &#39;345&#39;, &#39;45&#39;], &#39;12345&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="file-script-js-LC576" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>var values = { x: 1, y: 2, z: 3 };</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="file-script-js-LC577" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">prependKeyAndDouble</span> <span class="pl-k">=</span> (<span class="pl-smi">num</span>, <span class="pl-smi">key</span>, <span class="pl-smi">obj</span>) <span class="pl-k">=&gt;</span> key <span class="pl-k">+</span> (num <span class="pl-k">*</span> <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="file-script-js-LC578" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="file-script-js-LC579" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mapObjIndexed</span>(prependKeyAndDouble, values); <span class="pl-c"><span class="pl-c">//</span>=&gt; { x: &#39;x2&#39;, y: &#39;y4&#39;, z: &#39;z6&#39; }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="file-script-js-LC580" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span>a)<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bananas<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;ba&#39;, &#39;na&#39;, &#39;na&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="file-script-js-LC581" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>a<span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="file-script-js-LC582" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>a<span class="pl-pds">/</span></span>, <span class="pl-c1">null</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; TypeError: null does not have a method named &quot;match&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="file-script-js-LC583" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-k">-</span><span class="pl-c1">17</span>, <span class="pl-c1">5</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; 3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="file-script-js-LC584" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-c1">17</span>, <span class="pl-c1">5</span>);   <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="file-script-js-LC585" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-c1">17</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; NaN</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="file-script-js-LC586" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-c1">17</span>, <span class="pl-c1">0</span>);   <span class="pl-c"><span class="pl-c">//</span>=&gt; NaN</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="file-script-js-LC587" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-c1">17.2</span>, <span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; NaN</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="file-script-js-LC588" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-c1">17</span>, <span class="pl-c1">5.3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; NaN</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="file-script-js-LC589" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="file-script-js-LC590" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> clock <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">12</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="file-script-js-LC591" class="blob-code blob-code-inner js-file-line"><span class="pl-en">clock</span>(<span class="pl-c1">15</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="file-script-js-LC592" class="blob-code blob-code-inner js-file-line"><span class="pl-en">clock</span>(<span class="pl-c1">24</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 0</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="file-script-js-LC593" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="file-script-js-LC594" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> seventeenMod <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">mathMod</span>(<span class="pl-c1">17</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="file-script-js-LC595" class="blob-code blob-code-inner js-file-line"><span class="pl-en">seventeenMod</span>(<span class="pl-c1">3</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="file-script-js-LC596" class="blob-code blob-code-inner js-file-line"><span class="pl-en">seventeenMod</span>(<span class="pl-c1">4</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="file-script-js-LC597" class="blob-code blob-code-inner js-file-line"><span class="pl-en">seventeenMod</span>(<span class="pl-c1">10</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 7</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="file-script-js-LC598" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">max</span>(<span class="pl-c1">789</span>, <span class="pl-c1">123</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 789</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="file-script-js-LC599" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">max</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;b&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="file-script-js-LC600" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  square :: Number -&gt; Number</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="file-script-js-LC601" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">square</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> n <span class="pl-k">*</span> n;</td>
      </tr>
      <tr>
        <td id="file-script-js-L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="file-script-js-LC602" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="file-script-js-LC603" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">maxBy</span>(square, <span class="pl-k">-</span><span class="pl-c1">3</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; -3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="file-script-js-LC604" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="file-script-js-LC605" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduce</span>(<span class="pl-c1">R</span>.<span class="pl-en">maxBy</span>(square), <span class="pl-c1">0</span>, [<span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">2</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; -5</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="file-script-js-LC606" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduce</span>(<span class="pl-c1">R</span>.<span class="pl-en">maxBy</span>(square), <span class="pl-c1">0</span>, []); <span class="pl-c"><span class="pl-c">//</span>=&gt; 0</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="file-script-js-LC607" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mean</span>([<span class="pl-c1">2</span>, <span class="pl-c1">7</span>, <span class="pl-c1">9</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 6</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="file-script-js-LC608" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mean</span>([]); <span class="pl-c"><span class="pl-c">//</span>=&gt; NaN</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="file-script-js-LC609" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">median</span>([<span class="pl-c1">2</span>, <span class="pl-c1">9</span>, <span class="pl-c1">7</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 7</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="file-script-js-LC610" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">median</span>([<span class="pl-c1">7</span>, <span class="pl-c1">2</span>, <span class="pl-c1">10</span>, <span class="pl-c1">9</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 8</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="file-script-js-LC611" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">median</span>([]); <span class="pl-c"><span class="pl-c">//</span>=&gt; NaN</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="file-script-js-LC612" class="blob-code blob-code-inner js-file-line"><span class="pl-k">let</span> count <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="file-script-js-LC613" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-c1">factorial</span> <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">memoize</span>(<span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="file-script-js-LC614" class="blob-code blob-code-inner js-file-line">  count <span class="pl-k">+=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="file-script-js-LC615" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">R</span>.<span class="pl-c1">product</span>(<span class="pl-c1">R</span>.<span class="pl-en">range</span>(<span class="pl-c1">1</span>, n <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="file-script-js-LC616" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="file-script-js-L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="file-script-js-LC617" class="blob-code blob-code-inner js-file-line"><span class="pl-en">factorial</span>(<span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 120</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="file-script-js-LC618" class="blob-code blob-code-inner js-file-line"><span class="pl-en">factorial</span>(<span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 120</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="file-script-js-LC619" class="blob-code blob-code-inner js-file-line"><span class="pl-en">factorial</span>(<span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 120</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="file-script-js-LC620" class="blob-code blob-code-inner js-file-line">count; <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="file-script-js-LC621" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>let count = 0;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="file-script-js-LC622" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>const factorial = R.memoizeWith(R.identity, n =&gt; {</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="file-script-js-LC623" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  count += 1;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="file-script-js-LC624" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  return R.product(R.range(1, n + 1));</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="file-script-js-LC625" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>});</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="file-script-js-LC626" class="blob-code blob-code-inner js-file-line"><span class="pl-en">factorial</span>(<span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 120</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="file-script-js-LC627" class="blob-code blob-code-inner js-file-line"><span class="pl-en">factorial</span>(<span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 120</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="file-script-js-LC628" class="blob-code blob-code-inner js-file-line"><span class="pl-en">factorial</span>(<span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 120</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="file-script-js-LC629" class="blob-code blob-code-inner js-file-line">count; <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="file-script-js-LC630" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">merge</span>({ <span class="pl-s"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>fred<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>age<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">10</span> }, { <span class="pl-s"><span class="pl-pds">&#39;</span>age<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">40</span> });</td>
      </tr>
      <tr>
        <td id="file-script-js-L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="file-script-js-LC631" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { &#39;name&#39;: &#39;fred&#39;, &#39;age&#39;: 40 }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="file-script-js-LC632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="file-script-js-LC633" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> resetToDefault <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">merge</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, {x<span class="pl-k">:</span> <span class="pl-c1">0</span>});</td>
      </tr>
      <tr>
        <td id="file-script-js-L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="file-script-js-LC634" class="blob-code blob-code-inner js-file-line"><span class="pl-en">resetToDefault</span>({x<span class="pl-k">:</span> <span class="pl-c1">5</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: 0, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="file-script-js-LC635" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeAll</span>([{foo<span class="pl-k">:</span><span class="pl-c1">1</span>},{bar<span class="pl-k">:</span><span class="pl-c1">2</span>},{baz<span class="pl-k">:</span><span class="pl-c1">3</span>}]); <span class="pl-c"><span class="pl-c">//</span>=&gt; {foo:1,bar:2,baz:3}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="file-script-js-LC636" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeAll</span>([{foo<span class="pl-k">:</span><span class="pl-c1">1</span>},{foo<span class="pl-k">:</span><span class="pl-c1">2</span>},{bar<span class="pl-k">:</span><span class="pl-c1">2</span>}]); <span class="pl-c"><span class="pl-c">//</span>=&gt; {foo:2,bar:2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="file-script-js-LC637" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeDeepLeft</span>({ name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>fred<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">10</span>, contact<span class="pl-k">:</span> { email<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>moo@example.com<span class="pl-pds">&#39;</span></span> }},</td>
      </tr>
      <tr>
        <td id="file-script-js-L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="file-script-js-LC638" class="blob-code blob-code-inner js-file-line">                { age<span class="pl-k">:</span> <span class="pl-c1">40</span>, contact<span class="pl-k">:</span> { email<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>baa@example.com<span class="pl-pds">&#39;</span></span> }});</td>
      </tr>
      <tr>
        <td id="file-script-js-L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="file-script-js-LC639" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { name: &#39;fred&#39;, age: 10, contact: { email: &#39;moo@example.com&#39; }}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="file-script-js-LC640" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeDeepRight</span>({ name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>fred<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">10</span>, contact<span class="pl-k">:</span> { email<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>moo@example.com<span class="pl-pds">&#39;</span></span> }},</td>
      </tr>
      <tr>
        <td id="file-script-js-L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="file-script-js-LC641" class="blob-code blob-code-inner js-file-line">                 { age<span class="pl-k">:</span> <span class="pl-c1">40</span>, contact<span class="pl-k">:</span> { email<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>baa@example.com<span class="pl-pds">&#39;</span></span> }});</td>
      </tr>
      <tr>
        <td id="file-script-js-L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="file-script-js-LC642" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { name: &#39;fred&#39;, age: 40, contact: { email: &#39;baa@example.com&#39; }}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="file-script-js-LC643" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeDeepWith</span>(<span class="pl-c1">R</span>.<span class="pl-smi">concat</span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="file-script-js-LC644" class="blob-code blob-code-inner js-file-line">                { a<span class="pl-k">:</span> <span class="pl-c1">true</span>, c<span class="pl-k">:</span> { values<span class="pl-k">:</span> [<span class="pl-c1">10</span>, <span class="pl-c1">20</span>] }},</td>
      </tr>
      <tr>
        <td id="file-script-js-L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="file-script-js-LC645" class="blob-code blob-code-inner js-file-line">                { b<span class="pl-k">:</span> <span class="pl-c1">true</span>, c<span class="pl-k">:</span> { values<span class="pl-k">:</span> [<span class="pl-c1">15</span>, <span class="pl-c1">35</span>] }});</td>
      </tr>
      <tr>
        <td id="file-script-js-L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="file-script-js-LC646" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { a: true, b: true, c: { values: [10, 20, 15, 35] }}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="file-script-js-LC647" class="blob-code blob-code-inner js-file-line"><span class="pl-k">let</span> <span class="pl-en">concatValues</span> <span class="pl-k">=</span> (<span class="pl-smi">k</span>, <span class="pl-smi">l</span>, <span class="pl-smi">r</span>) <span class="pl-k">=&gt;</span> k <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>values<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> <span class="pl-c1">R</span>.<span class="pl-c1">concat</span>(l, r) <span class="pl-k">:</span> r</td>
      </tr>
      <tr>
        <td id="file-script-js-L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="file-script-js-LC648" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeDeepWithKey</span>(concatValues,</td>
      </tr>
      <tr>
        <td id="file-script-js-L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="file-script-js-LC649" class="blob-code blob-code-inner js-file-line">                   { a<span class="pl-k">:</span> <span class="pl-c1">true</span>, c<span class="pl-k">:</span> { thing<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, values<span class="pl-k">:</span> [<span class="pl-c1">10</span>, <span class="pl-c1">20</span>] }},</td>
      </tr>
      <tr>
        <td id="file-script-js-L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="file-script-js-LC650" class="blob-code blob-code-inner js-file-line">                   { b<span class="pl-k">:</span> <span class="pl-c1">true</span>, c<span class="pl-k">:</span> { thing<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, values<span class="pl-k">:</span> [<span class="pl-c1">15</span>, <span class="pl-c1">35</span>] }});</td>
      </tr>
      <tr>
        <td id="file-script-js-L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="file-script-js-LC651" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { a: true, b: true, c: { thing: &#39;bar&#39;, values: [10, 20, 15, 35] }}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="file-script-js-LC652" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeWith</span>(<span class="pl-c1">R</span>.<span class="pl-smi">concat</span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="file-script-js-LC653" class="blob-code blob-code-inner js-file-line">            { a<span class="pl-k">:</span> <span class="pl-c1">true</span>, values<span class="pl-k">:</span> [<span class="pl-c1">10</span>, <span class="pl-c1">20</span>] },</td>
      </tr>
      <tr>
        <td id="file-script-js-L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="file-script-js-LC654" class="blob-code blob-code-inner js-file-line">            { b<span class="pl-k">:</span> <span class="pl-c1">true</span>, values<span class="pl-k">:</span> [<span class="pl-c1">15</span>, <span class="pl-c1">35</span>] });</td>
      </tr>
      <tr>
        <td id="file-script-js-L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="file-script-js-LC655" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { a: true, b: true, values: [10, 20, 15, 35] }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="file-script-js-LC656" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>let concatValues = (k, l, r) =&gt; k == &#39;values&#39; ? R.concat(l, r) : r</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="file-script-js-LC657" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">mergeWithKey</span>(concatValues,</td>
      </tr>
      <tr>
        <td id="file-script-js-L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="file-script-js-LC658" class="blob-code blob-code-inner js-file-line">               { a<span class="pl-k">:</span> <span class="pl-c1">true</span>, thing<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, values<span class="pl-k">:</span> [<span class="pl-c1">10</span>, <span class="pl-c1">20</span>] },</td>
      </tr>
      <tr>
        <td id="file-script-js-L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="file-script-js-LC659" class="blob-code blob-code-inner js-file-line">               { b<span class="pl-k">:</span> <span class="pl-c1">true</span>, thing<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, values<span class="pl-k">:</span> [<span class="pl-c1">15</span>, <span class="pl-c1">35</span>] });</td>
      </tr>
      <tr>
        <td id="file-script-js-L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="file-script-js-LC660" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; { a: true, b: true, thing: &#39;bar&#39;, values: [10, 20, 15, 35] }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="file-script-js-LC661" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">min</span>(<span class="pl-c1">789</span>, <span class="pl-c1">123</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 123</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="file-script-js-LC662" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">min</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;a&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="file-script-js-LC663" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  square :: Number -&gt; Number</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="file-script-js-LC664" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">square</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> n <span class="pl-k">*</span> n;</td>
      </tr>
      <tr>
        <td id="file-script-js-L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="file-script-js-LC665" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="file-script-js-LC666" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">minBy</span>(square, <span class="pl-k">-</span><span class="pl-c1">3</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="file-script-js-LC667" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="file-script-js-LC668" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduce</span>(<span class="pl-c1">R</span>.<span class="pl-en">minBy</span>(square), <span class="pl-c1">Infinity</span>, [<span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">2</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="file-script-js-LC669" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduce</span>(<span class="pl-c1">R</span>.<span class="pl-en">minBy</span>(square), <span class="pl-c1">Infinity</span>, []); <span class="pl-c"><span class="pl-c">//</span>=&gt; Infinity</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="file-script-js-LC670" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> greet <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>{name}<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Hello, {name}!<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="file-script-js-LC671" class="blob-code blob-code-inner js-file-line"><span class="pl-en">greet</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Alice<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Hello, Alice!&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="file-script-js-LC672" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">modulo</span>(<span class="pl-c1">17</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="file-script-js-LC673" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> JS behavior:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="file-script-js-LC674" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">modulo</span>(<span class="pl-k">-</span><span class="pl-c1">17</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; -2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="file-script-js-LC675" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">modulo</span>(<span class="pl-c1">17</span>, <span class="pl-k">-</span><span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="file-script-js-LC676" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="file-script-js-LC677" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isOdd <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">modulo</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="file-script-js-LC678" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isOdd</span>(<span class="pl-c1">42</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 0</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="file-script-js-LC679" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isOdd</span>(<span class="pl-c1">21</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="file-script-js-LC680" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> double <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="file-script-js-LC681" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> triple <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="file-script-js-LC682" class="blob-code blob-code-inner js-file-line"><span class="pl-en">double</span>(<span class="pl-c1">3</span>);       <span class="pl-c"><span class="pl-c">//</span>=&gt;  6</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="file-script-js-LC683" class="blob-code blob-code-inner js-file-line"><span class="pl-en">triple</span>(<span class="pl-c1">4</span>);       <span class="pl-c"><span class="pl-c">//</span>=&gt; 12</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="file-script-js-LC684" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">2</span>, <span class="pl-c1">5</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; 10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="file-script-js-LC685" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">takesTwoArgs</span> <span class="pl-k">=</span> (<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) <span class="pl-k">=&gt;</span> [a, b];</td>
      </tr>
      <tr>
        <td id="file-script-js-L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="file-script-js-LC686" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="file-script-js-LC687" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">takesTwoArgs</span>.<span class="pl-c1">length</span>; <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="file-script-js-LC688" class="blob-code blob-code-inner js-file-line"><span class="pl-en">takesTwoArgs</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="file-script-js-LC689" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="file-script-js-LC690" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> takesOneArg <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">nAry</span>(<span class="pl-c1">1</span>, takesTwoArgs);</td>
      </tr>
      <tr>
        <td id="file-script-js-L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="file-script-js-LC691" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">takesOneArg</span>.<span class="pl-c1">length</span>; <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="file-script-js-LC692" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Only `n` arguments are passed to the wrapped function</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="file-script-js-LC693" class="blob-code blob-code-inner js-file-line"><span class="pl-en">takesOneArg</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, undefined]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="file-script-js-LC694" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">negate</span>(<span class="pl-c1">42</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; -42</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="file-script-js-LC695" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isEven</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> n <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="file-script-js-LC696" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isOdd</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> n <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="file-script-js-LC697" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="file-script-js-LC698" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">none</span>(isEven, [<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">7</span>, <span class="pl-c1">9</span>, <span class="pl-c1">11</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="file-script-js-LC699" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">none</span>(isOdd, [<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">7</span>, <span class="pl-c1">8</span>, <span class="pl-c1">11</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="file-script-js-LC700" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">not</span>(<span class="pl-c1">true</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="file-script-js-LC701" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">not</span>(<span class="pl-c1">false</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="file-script-js-LC702" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">not</span>(<span class="pl-c1">0</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="file-script-js-LC703" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">not</span>(<span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="file-script-js-LC704" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> list <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>quux<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="file-script-js-LC705" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">nth</span>(<span class="pl-c1">1</span>, list); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;bar&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="file-script-js-LC706" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">nth</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>, list); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;quux&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="file-script-js-LC707" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">nth</span>(<span class="pl-k">-</span><span class="pl-c1">99</span>, list); <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="file-script-js-LC708" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="file-script-js-LC709" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">nth</span>(<span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;c&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="file-script-js-LC710" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">nth</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="file-script-js-LC711" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">nthArg</span>(<span class="pl-c1">1</span>)(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;b&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="file-script-js-LC712" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">nthArg</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>)(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;c&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="file-script-js-LC713" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">classyGreeting</span> <span class="pl-k">=</span> <span class="pl-smi">name</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">&quot;</span>The name&#39;s <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">name</span>.<span class="pl-smi">last</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">name</span>.<span class="pl-smi">first</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">name</span>.<span class="pl-smi">last</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="file-script-js-LC714" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> yellGreeting <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">o</span>(<span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>, classyGreeting);</td>
      </tr>
      <tr>
        <td id="file-script-js-L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="file-script-js-LC715" class="blob-code blob-code-inner js-file-line"><span class="pl-en">yellGreeting</span>({first<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>James<span class="pl-pds">&#39;</span></span>, last<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Bond<span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;THE NAME&#39;S BOND, JAMES BOND&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="file-script-js-LC716" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="file-script-js-LC717" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">o</span>(<span class="pl-c1">R</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">10</span>), <span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">10</span>))(<span class="pl-k">-</span><span class="pl-c1">4</span>) <span class="pl-c"><span class="pl-c">//</span>=&gt; 60</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="file-script-js-LC718" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> matchPhrases <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(</td>
      </tr>
      <tr>
        <td id="file-script-js-L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="file-script-js-LC719" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">objOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>must<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="file-script-js-LC720" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">map</span>(<span class="pl-c1">R</span>.<span class="pl-en">objOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>match_phrase<span class="pl-pds">&#39;</span></span>))</td>
      </tr>
      <tr>
        <td id="file-script-js-L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="file-script-js-LC721" class="blob-code blob-code-inner js-file-line">);</td>
      </tr>
      <tr>
        <td id="file-script-js-L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="file-script-js-LC722" class="blob-code blob-code-inner js-file-line"><span class="pl-en">matchPhrases</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; {must: [{match_phrase: &#39;foo&#39;}, {match_phrase: &#39;bar&#39;}, {match_phrase: &#39;baz&#39;}]}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="file-script-js-LC723" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">of</span>(<span class="pl-c1">null</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [null]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="file-script-js-LC724" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">of</span>([<span class="pl-c1">42</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[42]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="file-script-js-LC725" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">omit</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {b: 2, c: 3}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="file-script-js-LC726" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> addOneOnce <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">once</span>(<span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="file-script-js-LC727" class="blob-code blob-code-inner js-file-line"><span class="pl-en">addOneOnce</span>(<span class="pl-c1">10</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 11</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="file-script-js-LC728" class="blob-code blob-code-inner js-file-line"><span class="pl-en">addOneOnce</span>(<span class="pl-en">addOneOnce</span>(<span class="pl-c1">50</span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; 11</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="file-script-js-LC729" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">or</span>(<span class="pl-c1">true</span>, <span class="pl-c1">true</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="file-script-js-LC730" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">or</span>(<span class="pl-c1">true</span>, <span class="pl-c1">false</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="file-script-js-LC731" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">or</span>(<span class="pl-c1">false</span>, <span class="pl-c1">true</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="file-script-js-LC732" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">or</span>(<span class="pl-c1">false</span>, <span class="pl-c1">false</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="file-script-js-LC733" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> headLens <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lensIndex</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="file-script-js-LC734" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="file-script-js-LC735" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">over</span>(headLens, <span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;FOO&#39;, &#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="file-script-js-LC736" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pair</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="file-script-js-LC737" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">multiply2</span> <span class="pl-k">=</span> (<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) <span class="pl-k">=&gt;</span> a <span class="pl-k">*</span> b;</td>
      </tr>
      <tr>
        <td id="file-script-js-L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="file-script-js-LC738" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> double <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">partial</span>(multiply2, [<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="file-script-js-LC739" class="blob-code blob-code-inner js-file-line"><span class="pl-en">double</span>(<span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 4</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="file-script-js-LC740" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="file-script-js-LC741" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">greet</span> <span class="pl-k">=</span> (<span class="pl-smi">salutation</span>, <span class="pl-smi">title</span>, <span class="pl-smi">firstName</span>, <span class="pl-smi">lastName</span>) <span class="pl-k">=&gt;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="file-script-js-LC742" class="blob-code blob-code-inner js-file-line">  salutation <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> title <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> firstName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> lastName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>!<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="file-script-js-LC743" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="file-script-js-LC744" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sayHello <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">partial</span>(greet, [<span class="pl-s"><span class="pl-pds">&#39;</span>Hello<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="file-script-js-LC745" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sayHelloToMs <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">partial</span>(sayHello, [<span class="pl-s"><span class="pl-pds">&#39;</span>Ms.<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="file-script-js-LC746" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sayHelloToMs</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Jane<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Jones<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Hello, Ms. Jane Jones!&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="file-script-js-LC747" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">greet</span> <span class="pl-k">=</span> (<span class="pl-smi">salutation</span>, <span class="pl-smi">title</span>, <span class="pl-smi">firstName</span>, <span class="pl-smi">lastName</span>) <span class="pl-k">=&gt;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="file-script-js-LC748" class="blob-code blob-code-inner js-file-line">  salutation <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> title <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> firstName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> lastName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>!<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="file-script-js-LC749" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="file-script-js-LC750" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> greetMsJaneJones <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">partialRight</span>(greet, [<span class="pl-s"><span class="pl-pds">&#39;</span>Ms.<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Jane<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Jones<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="file-script-js-LC751" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="file-script-js-LC752" class="blob-code blob-code-inner js-file-line"><span class="pl-en">greetMsJaneJones</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Hello<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Hello, Ms. Jane Jones!&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="file-script-js-LC753" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">partition</span>(<span class="pl-c1">R</span>.<span class="pl-c1">contains</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>s<span class="pl-pds">&#39;</span></span>), [<span class="pl-s"><span class="pl-pds">&#39;</span>sss<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ttt<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bars<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="file-script-js-LC754" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> =&gt; [ [ &#39;sss&#39;, &#39;bars&#39; ],  [ &#39;ttt&#39;, &#39;foo&#39; ] ]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="file-script-js-LC755" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="file-script-js-LC756" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">partition</span>(<span class="pl-c1">R</span>.<span class="pl-c1">contains</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>s<span class="pl-pds">&#39;</span></span>), { a<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>sss<span class="pl-pds">&#39;</span></span>, b<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ttt<span class="pl-pds">&#39;</span></span>, foo<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bars<span class="pl-pds">&#39;</span></span> });</td>
      </tr>
      <tr>
        <td id="file-script-js-L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="file-script-js-LC757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> =&gt; [ { a: &#39;sss&#39;, foo: &#39;bars&#39; }, { b: &#39;ttt&#39; }  ]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="file-script-js-LC758" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">path</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> {b<span class="pl-k">:</span> <span class="pl-c1">2</span>}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="file-script-js-LC759" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">path</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], {c<span class="pl-k">:</span> {b<span class="pl-k">:</span> <span class="pl-c1">2</span>}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="file-script-js-LC760" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> user1 <span class="pl-k">=</span> { address<span class="pl-k">:</span> { zipCode<span class="pl-k">:</span> <span class="pl-c1">90210</span> } };</td>
      </tr>
      <tr>
        <td id="file-script-js-L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="file-script-js-LC761" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> user2 <span class="pl-k">=</span> { address<span class="pl-k">:</span> { zipCode<span class="pl-k">:</span> <span class="pl-c1">55555</span> } };</td>
      </tr>
      <tr>
        <td id="file-script-js-L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="file-script-js-LC762" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> user3 <span class="pl-k">=</span> { name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Bob<span class="pl-pds">&#39;</span></span> };</td>
      </tr>
      <tr>
        <td id="file-script-js-L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="file-script-js-LC763" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> users <span class="pl-k">=</span> [ user1, user2, user3 ];</td>
      </tr>
      <tr>
        <td id="file-script-js-L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="file-script-js-LC764" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> isFamous <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">pathEq</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>address<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>zipCode<span class="pl-pds">&#39;</span></span>], <span class="pl-c1">90210</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="file-script-js-LC765" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">filter</span>(isFamous, users); <span class="pl-c"><span class="pl-c">//</span>=&gt; [ user1 ]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="file-script-js-LC766" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pathOr</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>N/A<span class="pl-pds">&#39;</span></span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> {b<span class="pl-k">:</span> <span class="pl-c1">2</span>}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="file-script-js-LC767" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pathOr</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>N/A<span class="pl-pds">&#39;</span></span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], {c<span class="pl-k">:</span> {b<span class="pl-k">:</span> <span class="pl-c1">2</span>}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;N/A&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="file-script-js-LC768" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pathSatisfies</span>(<span class="pl-smi">y</span> <span class="pl-k">=&gt;</span> y <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>], {x<span class="pl-k">:</span> {y<span class="pl-k">:</span> <span class="pl-c1">2</span>}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="file-script-js-LC769" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pick</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, d: 4}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="file-script-js-LC770" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pick</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>e<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>f<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="file-script-js-LC771" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pickAll</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, d: 4}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="file-script-js-LC772" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pickAll</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>e<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>f<span class="pl-pds">&#39;</span></span>], {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, e: undefined, f: undefined}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="file-script-js-LC773" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isUpperCase</span> <span class="pl-k">=</span> (<span class="pl-smi">val</span>, <span class="pl-smi">key</span>) <span class="pl-k">=&gt;</span> <span class="pl-smi">key</span>.<span class="pl-c1">toUpperCase</span>() <span class="pl-k">===</span> key;</td>
      </tr>
      <tr>
        <td id="file-script-js-L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="file-script-js-LC774" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pickBy</span>(isUpperCase, {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, <span class="pl-c1">A</span><span class="pl-k">:</span> <span class="pl-c1">3</span>, <span class="pl-c1">B</span><span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {A: 3, B: 4}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="file-script-js-LC775" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">pipe</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">pow</span>, <span class="pl-c1">R</span>.<span class="pl-smi">negate</span>, <span class="pl-c1">R</span>.<span class="pl-smi">inc</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="file-script-js-LC776" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="file-script-js-LC777" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(<span class="pl-c1">3</span>, <span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span> -(3^4) + 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="file-script-js-LC778" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  parseJson :: String -&gt; Maybe *</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="file-script-js-LC779" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  get :: String -&gt; Object -&gt; Maybe *</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="file-script-js-LC780" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="file-script-js-LC781" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  getStateCode :: Maybe String -&gt; Maybe String</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="file-script-js-LC782" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> getStateCode <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">pipeK</span>(</td>
      </tr>
      <tr>
        <td id="file-script-js-L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="file-script-js-LC783" class="blob-code blob-code-inner js-file-line">  parseJson,</td>
      </tr>
      <tr>
        <td id="file-script-js-L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="file-script-js-LC784" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">get</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>user<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="file-script-js-LC785" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">get</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>address<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="file-script-js-LC786" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">get</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>state<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="file-script-js-LC787" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-smi">Maybe</span>.<span class="pl-smi">of</span>, <span class="pl-c1">R</span>.<span class="pl-smi">toUpper</span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="file-script-js-LC788" class="blob-code blob-code-inner js-file-line">);</td>
      </tr>
      <tr>
        <td id="file-script-js-L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="file-script-js-LC789" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="file-script-js-LC790" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getStateCode</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>{&quot;user&quot;:{&quot;address&quot;:{&quot;state&quot;:&quot;ny&quot;}}}<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="file-script-js-LC791" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; Just(&#39;NY&#39;)</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="file-script-js-LC792" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getStateCode</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>[Invalid JSON]<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="file-script-js-LC793" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; Nothing()</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="file-script-js-LC794" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  followersForUser :: String -&gt; Promise [User]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="file-script-js-LC795" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> followersForUser <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">pipeP</span>(<span class="pl-smi">db</span>.<span class="pl-smi">getUserById</span>, <span class="pl-smi">db</span>.<span class="pl-smi">getFollowers</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="file-script-js-LC796" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pluck</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>)([{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">2</span>}]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="file-script-js-LC797" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pluck</span>(<span class="pl-c1">0</span>)([[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>]]);   <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="file-script-js-LC798" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">pluck</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>val<span class="pl-pds">&#39;</span></span>, {a<span class="pl-k">:</span> {val<span class="pl-k">:</span> <span class="pl-c1">3</span>}, b<span class="pl-k">:</span> {val<span class="pl-k">:</span> <span class="pl-c1">5</span>}}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 3, b: 5}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="file-script-js-LC799" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">prepend</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>fee<span class="pl-pds">&#39;</span></span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>fi<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>fum<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;fee&#39;, &#39;fi&#39;, &#39;fo&#39;, &#39;fum&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="file-script-js-LC800" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">product</span>([<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>,<span class="pl-c1">100</span>,<span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 38400</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="file-script-js-LC801" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> abby <span class="pl-k">=</span> {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Abby<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">7</span>, hair<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>blond<span class="pl-pds">&#39;</span></span>, grade<span class="pl-k">:</span> <span class="pl-c1">2</span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="file-script-js-LC802" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> fred <span class="pl-k">=</span> {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Fred<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">12</span>, hair<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>brown<span class="pl-pds">&#39;</span></span>, grade<span class="pl-k">:</span> <span class="pl-c1">7</span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="file-script-js-LC803" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> kids <span class="pl-k">=</span> [abby, fred];</td>
      </tr>
      <tr>
        <td id="file-script-js-L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="file-script-js-LC804" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">project</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>grade<span class="pl-pds">&#39;</span></span>], kids); <span class="pl-c"><span class="pl-c">//</span>=&gt; [{name: &#39;Abby&#39;, grade: 2}, {name: &#39;Fred&#39;, grade: 7}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="file-script-js-LC805" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, {x<span class="pl-k">:</span> <span class="pl-c1">100</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; 100</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="file-script-js-LC806" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, {}); <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="file-script-js-LC807" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> abby <span class="pl-k">=</span> {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Abby<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">7</span>, hair<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>blond<span class="pl-pds">&#39;</span></span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="file-script-js-LC808" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> fred <span class="pl-k">=</span> {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Fred<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">12</span>, hair<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>brown<span class="pl-pds">&#39;</span></span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="file-script-js-LC809" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> rusty <span class="pl-k">=</span> {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Rusty<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">10</span>, hair<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>brown<span class="pl-pds">&#39;</span></span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="file-script-js-LC810" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> alois <span class="pl-k">=</span> {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Alois<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">15</span>, disposition<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>surly<span class="pl-pds">&#39;</span></span>};</td>
      </tr>
      <tr>
        <td id="file-script-js-L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="file-script-js-LC811" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> kids <span class="pl-k">=</span> [abby, fred, rusty, alois];</td>
      </tr>
      <tr>
        <td id="file-script-js-L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="file-script-js-LC812" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> hasBrownHair <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">propEq</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>hair<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>brown<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="file-script-js-LC813" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">filter</span>(hasBrownHair, kids); <span class="pl-c"><span class="pl-c">//</span>=&gt; [fred, rusty]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="file-script-js-LC814" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">propIs</span>(<span class="pl-c1">Number</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="file-script-js-LC815" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">propIs</span>(<span class="pl-c1">Number</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, {x<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>});    <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="file-script-js-LC816" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">propIs</span>(<span class="pl-c1">Number</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, {});            <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="file-script-js-LC817" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> alice <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="file-script-js-LC818" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ALICE<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="file-script-js-LC819" class="blob-code blob-code-inner js-file-line">  age<span class="pl-k">:</span> <span class="pl-c1">101</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="file-script-js-LC820" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="file-script-js-LC821" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> favorite <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>favoriteLibrary<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="file-script-js-LC822" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> favoriteWithDefault <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">propOr</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Ramda<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>favoriteLibrary<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="file-script-js-LC823" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="file-script-js-LC824" class="blob-code blob-code-inner js-file-line"><span class="pl-en">favorite</span>(alice);  <span class="pl-c"><span class="pl-c">//</span>=&gt; undefined</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="file-script-js-LC825" class="blob-code blob-code-inner js-file-line"><span class="pl-en">favoriteWithDefault</span>(alice);  <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Ramda&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="file-script-js-LC826" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">props</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>y<span class="pl-pds">&#39;</span></span>], {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="file-script-js-LC827" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">props</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], {b<span class="pl-k">:</span> <span class="pl-c1">2</span>, a<span class="pl-k">:</span> <span class="pl-c1">1</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; [undefined, 1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="file-script-js-LC828" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="file-script-js-LC829" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> fullName <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-c1">R</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>), <span class="pl-c1">R</span>.<span class="pl-en">props</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span>]));</td>
      </tr>
      <tr>
        <td id="file-script-js-L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="file-script-js-LC830" class="blob-code blob-code-inner js-file-line"><span class="pl-en">fullName</span>({last<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Bullet-Tooth<span class="pl-pds">&#39;</span></span>, age<span class="pl-k">:</span> <span class="pl-c1">33</span>, first<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Tony<span class="pl-pds">&#39;</span></span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Tony Bullet-Tooth&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="file-script-js-LC831" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">propSatisfies</span>(<span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="file-script-js-LC832" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">range</span>(<span class="pl-c1">1</span>, <span class="pl-c1">5</span>);    <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="file-script-js-LC833" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">range</span>(<span class="pl-c1">50</span>, <span class="pl-c1">53</span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; [50, 51, 52]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="file-script-js-LC834" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduce</span>(<span class="pl-c1">R</span>.<span class="pl-smi">subtract</span>, <span class="pl-c1">0</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]) <span class="pl-c"><span class="pl-c">//</span> =&gt; ((((0 - 1) - 2) - 3) - 4) = -10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="file-script-js-LC835" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>          -               -10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="file-script-js-LC836" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>         / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="file-script-js-LC837" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        -   4           -6   4</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="file-script-js-LC838" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>       / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="file-script-js-LC839" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      -   3   ==&gt;     -3   3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="file-script-js-LC840" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="file-script-js-LC841" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    -   2           -1   2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="file-script-js-LC842" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="file-script-js-LC843" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  0   1            0   1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="file-script-js-LC844" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> reduceToNamesBy <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">reduceBy</span>((<span class="pl-smi">acc</span>, <span class="pl-smi">student</span>) <span class="pl-k">=&gt;</span> <span class="pl-smi">acc</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">student</span>.<span class="pl-c1">name</span>), []);</td>
      </tr>
      <tr>
        <td id="file-script-js-L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="file-script-js-LC845" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> namesByGrade <span class="pl-k">=</span> <span class="pl-en">reduceToNamesBy</span>(<span class="pl-k">function</span>(<span class="pl-smi">student</span>) {</td>
      </tr>
      <tr>
        <td id="file-script-js-L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="file-script-js-LC846" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> score <span class="pl-k">=</span> <span class="pl-smi">student</span>.<span class="pl-smi">score</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="file-script-js-LC847" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> score <span class="pl-k">&lt;</span> <span class="pl-c1">65</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>F<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="file-script-js-LC848" class="blob-code blob-code-inner js-file-line">         score <span class="pl-k">&lt;</span> <span class="pl-c1">70</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>D<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="file-script-js-LC849" class="blob-code blob-code-inner js-file-line">         score <span class="pl-k">&lt;</span> <span class="pl-c1">80</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>C<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="file-script-js-LC850" class="blob-code blob-code-inner js-file-line">         score <span class="pl-k">&lt;</span> <span class="pl-c1">90</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="file-script-js-LC851" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="file-script-js-L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="file-script-js-LC852" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> students <span class="pl-k">=</span> [{name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Lucy<span class="pl-pds">&#39;</span></span>, score<span class="pl-k">:</span> <span class="pl-c1">92</span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="file-script-js-LC853" class="blob-code blob-code-inner js-file-line">                {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Drew<span class="pl-pds">&#39;</span></span>, score<span class="pl-k">:</span> <span class="pl-c1">85</span>},</td>
      </tr>
      <tr>
        <td id="file-script-js-L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="file-script-js-LC854" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> ...</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="file-script-js-LC855" class="blob-code blob-code-inner js-file-line">                {name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Bart<span class="pl-pds">&#39;</span></span>, score<span class="pl-k">:</span> <span class="pl-c1">62</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="file-script-js-LC856" class="blob-code blob-code-inner js-file-line"><span class="pl-en">namesByGrade</span>(students);</td>
      </tr>
      <tr>
        <td id="file-script-js-L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="file-script-js-LC857" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="file-script-js-LC858" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   &#39;A&#39;: [&#39;Lucy&#39;],</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="file-script-js-LC859" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   &#39;B&#39;: [&#39;Drew&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="file-script-js-LC860" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   // ...,</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="file-script-js-LC861" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   &#39;F&#39;: [&#39;Bart&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="file-script-js-LC862" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> }</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="file-script-js-LC863" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduce</span>(</td>
      </tr>
      <tr>
        <td id="file-script-js-L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="file-script-js-LC864" class="blob-code blob-code-inner js-file-line"> (<span class="pl-smi">acc</span>, <span class="pl-smi">item</span>) <span class="pl-k">=&gt;</span> item <span class="pl-k">&gt;</span> <span class="pl-c1">3</span> <span class="pl-k">?</span> <span class="pl-c1">R</span>.<span class="pl-en">reduced</span>(acc) <span class="pl-k">:</span> <span class="pl-smi">acc</span>.<span class="pl-c1">concat</span>(item),</td>
      </tr>
      <tr>
        <td id="file-script-js-L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="file-script-js-LC865" class="blob-code blob-code-inner js-file-line"> [],</td>
      </tr>
      <tr>
        <td id="file-script-js-L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="file-script-js-LC866" class="blob-code blob-code-inner js-file-line"> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>]) <span class="pl-c"><span class="pl-c">//</span> [1, 2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="file-script-js-LC867" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduceRight</span>(<span class="pl-c1">R</span>.<span class="pl-smi">subtract</span>, <span class="pl-c1">0</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]) <span class="pl-c"><span class="pl-c">//</span> =&gt; (1 - (2 - (3 - (4 - 0)))) = -2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="file-script-js-LC868" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    -               -2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="file-script-js-LC869" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="file-script-js-LC870" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  1   -            1   3</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="file-script-js-LC871" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="file-script-js-LC872" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    2   -     ==&gt;    2  -1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="file-script-js-LC873" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>       / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="file-script-js-LC874" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      3   -            3   4</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="file-script-js-LC875" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>         / \              / \</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="file-script-js-LC876" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        4   0            4   0</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="file-script-js-LC877" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isOdd</span> <span class="pl-k">=</span> (<span class="pl-smi">acc</span>, <span class="pl-smi">x</span>) <span class="pl-k">=&gt;</span> x <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="file-script-js-LC878" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xs <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">60</span>, <span class="pl-c1">777</span>, <span class="pl-c1">800</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="file-script-js-LC879" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduceWhile</span>(isOdd, <span class="pl-c1">R</span>.<span class="pl-smi">add</span>, <span class="pl-c1">0</span>, xs); <span class="pl-c"><span class="pl-c">//</span>=&gt; 9</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="file-script-js-LC880" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="file-script-js-LC881" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ys <span class="pl-k">=</span> [<span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>]</td>
      </tr>
      <tr>
        <td id="file-script-js-L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="file-script-js-LC882" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reduceWhile</span>(isOdd, <span class="pl-c1">R</span>.<span class="pl-smi">add</span>, <span class="pl-c1">111</span>, ys); <span class="pl-c"><span class="pl-c">//</span>=&gt; 111</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="file-script-js-LC883" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isOdd</span> <span class="pl-k">=</span> (<span class="pl-smi">n</span>) <span class="pl-k">=&gt;</span> n <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="file-script-js-LC884" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="file-script-js-LC885" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reject</span>(isOdd, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="file-script-js-LC886" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="file-script-js-LC887" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">reject</span>(isOdd, {a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>, d<span class="pl-k">:</span> <span class="pl-c1">4</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; {b: 2, d: 4}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="file-script-js-LC888" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">remove</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1,2,6,7,8]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="file-script-js-LC889" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">repeat</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>hi<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;hi&#39;, &#39;hi&#39;, &#39;hi&#39;, &#39;hi&#39;, &#39;hi&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="file-script-js-LC890" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="file-script-js-LC891" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> obj <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="file-script-js-L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="file-script-js-LC892" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> repeatedObjs <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">repeat</span>(obj, <span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [{}, {}, {}, {}, {}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="file-script-js-LC893" class="blob-code blob-code-inner js-file-line">repeatedObjs[<span class="pl-c1">0</span>] <span class="pl-k">===</span> repeatedObjs[<span class="pl-c1">1</span>]; <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="file-script-js-LC894" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>foo foo foo<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;bar foo foo&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="file-script-js-LC895" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>foo<span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>foo foo foo<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;bar foo foo&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="file-script-js-LC896" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="file-script-js-LC897" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Use the &quot;g&quot; (global) flag to replace all occurrences:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="file-script-js-LC898" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>foo<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>foo foo foo<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;bar bar bar&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="file-script-js-LC899" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);  <span class="pl-c"><span class="pl-c">//</span>=&gt; [3, 2, 1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="file-script-js-LC900" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="file-script-js-LC901" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>([<span class="pl-c1">1</span>]);        <span class="pl-c"><span class="pl-c">//</span>=&gt; [1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="file-script-js-LC902" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>([]);         <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="file-script-js-LC903" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="file-script-js-LC904" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>);      <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;cba&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="file-script-js-LC905" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>ab<span class="pl-pds">&#39;</span></span>);       <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;ba&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="file-script-js-LC906" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>);        <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;a&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="file-script-js-LC907" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">reverse</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);         <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="file-script-js-LC908" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> numbers <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="file-script-js-LC909" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> factorials <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">scan</span>(<span class="pl-c1">R</span>.<span class="pl-smi">multiply</span>, <span class="pl-c1">1</span>, numbers); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 1, 2, 6, 24]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="file-script-js-LC910" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">sequence</span>(<span class="pl-smi">Maybe</span>.<span class="pl-smi">of</span>, [<span class="pl-en">Just</span>(<span class="pl-c1">1</span>), <span class="pl-en">Just</span>(<span class="pl-c1">2</span>), <span class="pl-en">Just</span>(<span class="pl-c1">3</span>)]);   <span class="pl-c"><span class="pl-c">//</span>=&gt; Just([1, 2, 3])</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="file-script-js-LC911" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">sequence</span>(<span class="pl-smi">Maybe</span>.<span class="pl-smi">of</span>, [<span class="pl-en">Just</span>(<span class="pl-c1">1</span>), <span class="pl-en">Just</span>(<span class="pl-c1">2</span>), <span class="pl-en">Nothing</span>()]); <span class="pl-c"><span class="pl-c">//</span>=&gt; Nothing()</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="file-script-js-LC912" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="file-script-js-LC913" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">sequence</span>(<span class="pl-c1">R</span>.<span class="pl-smi">of</span>, <span class="pl-en">Just</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>])); <span class="pl-c"><span class="pl-c">//</span>=&gt; [Just(1), Just(2), Just(3)]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="file-script-js-LC914" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">sequence</span>(<span class="pl-c1">R</span>.<span class="pl-smi">of</span>, <span class="pl-en">Nothing</span>());       <span class="pl-c"><span class="pl-c">//</span>=&gt; [Nothing()]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="file-script-js-LC915" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xLens <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lensProp</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="file-script-js-LC916" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="file-script-js-LC917" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">set</span>(xLens, <span class="pl-c1">4</span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: 4, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="file-script-js-LC918" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">set</span>(xLens, <span class="pl-c1">8</span>, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; {x: 8, y: 2}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="file-script-js-LC919" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>]);        <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;b&#39;, &#39;c&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="file-script-js-LC920" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>, <span class="pl-c1">Infinity</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;b&#39;, &#39;c&#39;, &#39;d&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="file-script-js-LC921" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>]);       <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="file-script-js-LC922" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">slice</span>(<span class="pl-k">-</span><span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>]);      <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;b&#39;, &#39;c&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="file-script-js-LC923" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ramda<span class="pl-pds">&#39;</span></span>);                     <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;ram&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="file-script-js-LC924" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">diff</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) { <span class="pl-k">return</span> a <span class="pl-k">-</span> b; };</td>
      </tr>
      <tr>
        <td id="file-script-js-L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="file-script-js-LC925" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">sort</span>(diff, [<span class="pl-c1">4</span>,<span class="pl-c1">2</span>,<span class="pl-c1">7</span>,<span class="pl-c1">5</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 4, 5, 7]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="file-script-js-LC926" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sortByFirstItem <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">sortBy</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-c1">0</span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="file-script-js-LC927" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sortByNameCaseInsensitive <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">sortBy</span>(<span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-c1">R</span>.<span class="pl-smi">toLower</span>, <span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>)));</td>
      </tr>
      <tr>
        <td id="file-script-js-L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="file-script-js-LC928" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> pairs <span class="pl-k">=</span> [[<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>], [<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">2</span>], [<span class="pl-k">-</span><span class="pl-c1">3</span>, <span class="pl-c1">3</span>]];</td>
      </tr>
      <tr>
        <td id="file-script-js-L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="file-script-js-LC929" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sortByFirstItem</span>(pairs); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[-3, 3], [-2, 2], [-1, 1]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="file-script-js-LC930" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> alice <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="file-script-js-LC931" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ALICE<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="file-script-js-LC932" class="blob-code blob-code-inner js-file-line">  age<span class="pl-k">:</span> <span class="pl-c1">101</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="file-script-js-LC933" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="file-script-js-LC934" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> bob <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="file-script-js-LC935" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Bob<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="file-script-js-LC936" class="blob-code blob-code-inner js-file-line">  age<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="file-script-js-LC937" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="file-script-js-LC938" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> clara <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="file-script-js-LC939" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>clara<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="file-script-js-LC940" class="blob-code blob-code-inner js-file-line">  age<span class="pl-k">:</span> <span class="pl-c1">314.159</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="file-script-js-LC941" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="file-script-js-LC942" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> people <span class="pl-k">=</span> [clara, bob, alice];</td>
      </tr>
      <tr>
        <td id="file-script-js-L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="file-script-js-LC943" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sortByNameCaseInsensitive</span>(people); <span class="pl-c"><span class="pl-c">//</span>=&gt; [alice, bob, clara]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="file-script-js-LC944" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> alice <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="file-script-js-LC945" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>alice<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="file-script-js-LC946" class="blob-code blob-code-inner js-file-line">  age<span class="pl-k">:</span> <span class="pl-c1">40</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="file-script-js-LC947" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="file-script-js-LC948" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> bob <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="file-script-js-LC949" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bob<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="file-script-js-LC950" class="blob-code blob-code-inner js-file-line">  age<span class="pl-k">:</span> <span class="pl-c1">30</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="file-script-js-LC951" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="file-script-js-LC952" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> clara <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="file-script-js-LC953" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>clara<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="file-script-js-LC954" class="blob-code blob-code-inner js-file-line">  age<span class="pl-k">:</span> <span class="pl-c1">40</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="file-script-js-LC955" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="file-script-js-LC956" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> people <span class="pl-k">=</span> [clara, bob, alice];</td>
      </tr>
      <tr>
        <td id="file-script-js-L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="file-script-js-LC957" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ageNameSort <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">sortWith</span>([</td>
      </tr>
      <tr>
        <td id="file-script-js-L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="file-script-js-LC958" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">descend</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>age<span class="pl-pds">&#39;</span></span>)),</td>
      </tr>
      <tr>
        <td id="file-script-js-L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="file-script-js-LC959" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">ascend</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>))</td>
      </tr>
      <tr>
        <td id="file-script-js-L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="file-script-js-LC960" class="blob-code blob-code-inner js-file-line">]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="file-script-js-LC961" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ageNameSort</span>(people); <span class="pl-c"><span class="pl-c">//</span>=&gt; [alice, clara, bob]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="file-script-js-LC962" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> pathComponents <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="file-script-js-LC963" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>(<span class="pl-en">pathComponents</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/usr/local/bin/node<span class="pl-pds">&#39;</span></span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;usr&#39;, &#39;local&#39;, &#39;bin&#39;, &#39;node&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="file-script-js-LC964" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="file-script-js-LC965" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a.b.c.xyz.d<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;xyz&#39;, &#39;d&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="file-script-js-LC966" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">splitAt</span>(<span class="pl-c1">1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);          <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1], [2, 3]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="file-script-js-LC967" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">splitAt</span>(<span class="pl-c1">5</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>hello world<span class="pl-pds">&#39;</span></span>);      <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;hello&#39;, &#39; world&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="file-script-js-LC968" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">splitAt</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>foobar<span class="pl-pds">&#39;</span></span>);          <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;fooba&#39;, &#39;r&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="file-script-js-LC969" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">splitEvery</span>(<span class="pl-c1">3</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>, <span class="pl-c1">7</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1, 2, 3], [4, 5, 6], [7]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="file-script-js-LC970" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">splitEvery</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>foobarbaz<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="file-script-js-LC971" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">splitWhen</span>(<span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-c1">2</span>), [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);   <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1], [2, 3, 1, 2, 3]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="file-script-js-LC972" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>)                <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="file-script-js-LC973" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>)                <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="file-script-js-LC974" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">startsWith</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>])    <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="file-script-js-LC975" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">startsWith</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>])    <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="file-script-js-LC976" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">subtract</span>(<span class="pl-c1">10</span>, <span class="pl-c1">8</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="file-script-js-LC977" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="file-script-js-LC978" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> minus5 <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">subtract</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="file-script-js-LC979" class="blob-code blob-code-inner js-file-line"><span class="pl-en">minus5</span>(<span class="pl-c1">17</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 12</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="file-script-js-LC980" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="file-script-js-LC981" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> complementaryAngle <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">subtract</span>(<span class="pl-c1">90</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="file-script-js-LC982" class="blob-code blob-code-inner js-file-line"><span class="pl-en">complementaryAngle</span>(<span class="pl-c1">30</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 60</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="file-script-js-LC983" class="blob-code blob-code-inner js-file-line"><span class="pl-en">complementaryAngle</span>(<span class="pl-c1">72</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 18</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="file-script-js-LC984" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">sum</span>([<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>,<span class="pl-c1">100</span>,<span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; 121</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="file-script-js-LC985" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">symmetricDifference</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>], [<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1,2,7,6,5]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="file-script-js-LC986" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">symmetricDifference</span>([<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [7,6,5,1,2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="file-script-js-LC987" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> eqA <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">eqBy</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="file-script-js-LC988" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l1 <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">2</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">3</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">4</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="file-script-js-LC989" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l2 <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">3</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">4</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">5</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">6</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="file-script-js-LC990" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">symmetricDifferenceWith</span>(eqA, l1, l2); <span class="pl-c"><span class="pl-c">//</span>=&gt; [{a: 1}, {a: 2}, {a: 5}, {a: 6}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="file-script-js-LC991" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">T</span>(); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="file-script-js-LC992" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]);  <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="file-script-js-LC993" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="file-script-js-LC994" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>([<span class="pl-c1">1</span>]);        <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="file-script-js-LC995" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>([]);         <span class="pl-c"><span class="pl-c">//</span>=&gt; []</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="file-script-js-LC996" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="file-script-js-LC997" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>);  <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;bc&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="file-script-js-LC998" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>ab<span class="pl-pds">&#39;</span></span>);   <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;b&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="file-script-js-LC999" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>);    <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="file-script-js-LC1000" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tail</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);     <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="file-script-js-LC1001" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">1</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="file-script-js-LC1002" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">2</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="file-script-js-LC1003" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">3</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="file-script-js-LC1004" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">4</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="file-script-js-LC1005" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ramda<span class="pl-pds">&#39;</span></span>);               <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;ram&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="file-script-js-LC1006" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="file-script-js-LC1007" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> personnel <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="file-script-js-L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="file-script-js-LC1008" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Dave Brubeck<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="file-script-js-LC1009" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Paul Desmond<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="file-script-js-LC1010" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Eugene Wright<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="file-script-js-LC1011" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Joe Morello<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="file-script-js-LC1012" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Gerry Mulligan<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="file-script-js-LC1013" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Bob Bates<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="file-script-js-LC1014" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Joe Dodge<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="file-script-js-L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="file-script-js-LC1015" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>Ron Crotty<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="file-script-js-LC1016" class="blob-code blob-code-inner js-file-line">];</td>
      </tr>
      <tr>
        <td id="file-script-js-L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="file-script-js-LC1017" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="file-script-js-LC1018" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> takeFive <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="file-script-js-LC1019" class="blob-code blob-code-inner js-file-line"><span class="pl-en">takeFive</span>(personnel);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="file-script-js-LC1020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;Dave Brubeck&#39;, &#39;Paul Desmond&#39;, &#39;Eugene Wright&#39;, &#39;Joe Morello&#39;, &#39;Gerry Mulligan&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="file-script-js-LC1021" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeLast</span>(<span class="pl-c1">1</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="file-script-js-LC1022" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeLast</span>(<span class="pl-c1">2</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="file-script-js-LC1023" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeLast</span>(<span class="pl-c1">3</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="file-script-js-LC1024" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeLast</span>(<span class="pl-c1">4</span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>baz<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="file-script-js-LC1025" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeLast</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ramda<span class="pl-pds">&#39;</span></span>);               <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;mda&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="file-script-js-LC1026" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isNotOne</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">!==</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="file-script-js-LC1027" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="file-script-js-LC1028" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeLastWhile</span>(isNotOne, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 3, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="file-script-js-LC1029" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="file-script-js-LC1030" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeLastWhile</span>(<span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>R<span class="pl-pds">&#39;</span></span> , <span class="pl-s"><span class="pl-pds">&#39;</span>Ramda<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;amda&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="file-script-js-LC1031" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isNotFour</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">!==</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="file-script-js-LC1032" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="file-script-js-LC1033" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeWhile</span>(isNotFour, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="file-script-js-LC1034" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="file-script-js-LC1035" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">takeWhile</span>(<span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> x <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span> , <span class="pl-s"><span class="pl-pds">&#39;</span>Ramda<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;Ram&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="file-script-js-LC1036" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">sayX</span> <span class="pl-k">=</span> <span class="pl-smi">x</span> <span class="pl-k">=&gt;</span> <span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x is <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> x);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="file-script-js-LC1037" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tap</span>(sayX, <span class="pl-c1">100</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 100</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="file-script-js-LC1038" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> logs &#39;x is 100&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="file-script-js-LC1039" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">test</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>x<span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>xyz<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="file-script-js-LC1040" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">test</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>y<span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>xyz<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="file-script-js-LC1041" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">times</span>(<span class="pl-c1">R</span>.<span class="pl-smi">identity</span>, <span class="pl-c1">5</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [0, 1, 2, 3, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="file-script-js-LC1042" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">toLower</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>XYZ<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;xyz&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="file-script-js-LC1043" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">toPairs</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[&#39;a&#39;, 1], [&#39;b&#39;, 2], [&#39;c&#39;, 3]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="file-script-js-LC1044" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>var F = function() { this.x = &#39;X&#39;; };</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="file-script-js-LC1045" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Y<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="file-script-js-LC1046" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">F</span>();</td>
      </tr>
      <tr>
        <td id="file-script-js-L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="file-script-js-LC1047" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">toPairsIn</span>(f); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[&#39;x&#39;,&#39;X&#39;], [&#39;y&#39;,&#39;Y&#39;]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="file-script-js-LC1048" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">toString</span>(<span class="pl-c1">42</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;42&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="file-script-js-LC1049" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">toString</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;&quot;abc&quot;&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="file-script-js-LC1050" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">toString</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;[1, 2, 3]&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="file-script-js-LC1051" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">toString</span>({foo<span class="pl-k">:</span> <span class="pl-c1">1</span>, bar<span class="pl-k">:</span> <span class="pl-c1">2</span>, baz<span class="pl-k">:</span> <span class="pl-c1">3</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;{&quot;bar&quot;: 2, &quot;baz&quot;: 3, &quot;foo&quot;: 1}&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="file-script-js-LC1052" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">toString</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>2001-02-03T04:05:06Z<span class="pl-pds">&#39;</span></span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;new Date(&quot;2001-02-03T04:05:06.000Z&quot;)&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="file-script-js-LC1053" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">toUpper</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>abc<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;ABC&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="file-script-js-LC1054" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> numbers <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="file-script-js-LC1055" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> transducer <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-c1">R</span>.<span class="pl-en">map</span>(<span class="pl-c1">R</span>.<span class="pl-c1">add</span>(<span class="pl-c1">1</span>)), <span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="file-script-js-LC1056" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">transduce</span>(transducer, <span class="pl-c1">R</span>.<span class="pl-en">flip</span>(<span class="pl-c1">R</span>.<span class="pl-smi">append</span>), [], numbers); <span class="pl-c"><span class="pl-c">//</span>=&gt; [2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="file-script-js-LC1057" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="file-script-js-LC1058" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">isOdd</span> <span class="pl-k">=</span> (<span class="pl-smi">x</span>) <span class="pl-k">=&gt;</span> x <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="file-script-js-LC1059" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> firstOddTransducer <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">compose</span>(<span class="pl-c1">R</span>.<span class="pl-en">filter</span>(isOdd), <span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="file-script-js-L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="file-script-js-LC1060" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">transduce</span>(firstOddTransducer, <span class="pl-c1">R</span>.<span class="pl-en">flip</span>(<span class="pl-c1">R</span>.<span class="pl-smi">append</span>), [], <span class="pl-c1">R</span>.<span class="pl-en">range</span>(<span class="pl-c1">0</span>, <span class="pl-c1">100</span>)); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="file-script-js-LC1061" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">transpose</span>([[<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>], [<span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>], [<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>]]) <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1, 2, 3], [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="file-script-js-LC1062" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">transpose</span>([[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>]]) <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1, &#39;a&#39;], [2, &#39;b&#39;], [3, &#39;c&#39;]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="file-script-js-LC1063" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="file-script-js-LC1064" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> If some of the rows are shorter than the following rows, their elements are skipped:</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="file-script-js-LC1065" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">transpose</span>([[<span class="pl-c1">10</span>, <span class="pl-c1">11</span>], [<span class="pl-c1">20</span>], [], [<span class="pl-c1">30</span>, <span class="pl-c1">31</span>, <span class="pl-c1">32</span>]]) <span class="pl-c"><span class="pl-c">//</span>=&gt; [[10, 20, 30], [11, 31], [32]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="file-script-js-LC1066" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Returns `Nothing` if the given divisor is `0`</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="file-script-js-LC1067" class="blob-code blob-code-inner js-file-line"><span class="pl-en">safeDiv</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">d</span> <span class="pl-k">=&gt;</span> d <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-en">Nothing</span>() <span class="pl-k">:</span> <span class="pl-en">Just</span>(n <span class="pl-k">/</span> d)</td>
      </tr>
      <tr>
        <td id="file-script-js-L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="file-script-js-LC1068" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="file-script-js-LC1069" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">traverse</span>(<span class="pl-smi">Maybe</span>.<span class="pl-smi">of</span>, <span class="pl-en">safeDiv</span>(<span class="pl-c1">10</span>), [<span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; Just([5, 2.5, 2])</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="file-script-js-LC1070" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">traverse</span>(<span class="pl-smi">Maybe</span>.<span class="pl-smi">of</span>, <span class="pl-en">safeDiv</span>(<span class="pl-c1">10</span>), [<span class="pl-c1">2</span>, <span class="pl-c1">0</span>, <span class="pl-c1">5</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; Nothing</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="file-script-js-LC1071" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tryCatch</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>), <span class="pl-c1">R</span>.<span class="pl-c1">F</span>)({x<span class="pl-k">:</span> <span class="pl-c1">true</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="file-script-js-LC1072" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">tryCatch</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>), <span class="pl-c1">R</span>.<span class="pl-c1">F</span>)(<span class="pl-c1">null</span>);      <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="file-script-js-LC1073" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>({}); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;Object&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="file-script-js-LC1074" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>(<span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;Number&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="file-script-js-LC1075" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>(<span class="pl-c1">false</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;Boolean&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="file-script-js-LC1076" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>s<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;String&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="file-script-js-LC1077" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>(<span class="pl-c1">null</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;Null&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="file-script-js-LC1078" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>([]); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;Array&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="file-script-js-LC1079" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">A-z</span>]</span><span class="pl-pds">/</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;RegExp&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="file-script-js-LC1080" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>(() <span class="pl-k">=&gt;</span> {}); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;Function&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="file-script-js-LC1081" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">type</span>(<span class="pl-c1">undefined</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &quot;Undefined&quot;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="file-script-js-LC1082" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">unapply</span>(<span class="pl-c1">JSON</span>.<span class="pl-smi">stringify</span>)(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;[1,2,3]&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="file-script-js-LC1083" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">takesTwoArgs</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="file-script-js-L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="file-script-js-LC1084" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> [a, b];</td>
      </tr>
      <tr>
        <td id="file-script-js-L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="file-script-js-LC1085" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="file-script-js-LC1086" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">takesTwoArgs</span>.<span class="pl-c1">length</span>; <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="file-script-js-LC1087" class="blob-code blob-code-inner js-file-line"><span class="pl-en">takesTwoArgs</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="file-script-js-LC1088" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="file-script-js-LC1089" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> takesOneArg <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">unary</span>(takesTwoArgs);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="file-script-js-LC1090" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">takesOneArg</span>.<span class="pl-c1">length</span>; <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="file-script-js-LC1091" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Only 1 argument is passed to the wrapped function</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="file-script-js-LC1092" class="blob-code blob-code-inner js-file-line"><span class="pl-en">takesOneArg</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, undefined]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="file-script-js-LC1093" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">addFour</span> <span class="pl-k">=</span> <span class="pl-smi">a</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">b</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">c</span> <span class="pl-k">=&gt;</span> <span class="pl-smi">d</span> <span class="pl-k">=&gt;</span> a <span class="pl-k">+</span> b <span class="pl-k">+</span> c <span class="pl-k">+</span> d;</td>
      </tr>
      <tr>
        <td id="file-script-js-L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="file-script-js-LC1094" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="file-script-js-LC1095" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> uncurriedAddFour <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">uncurryN</span>(<span class="pl-c1">4</span>, addFour);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="file-script-js-LC1096" class="blob-code blob-code-inner js-file-line"><span class="pl-en">uncurriedAddFour</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 10</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="file-script-js-LC1097" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">f</span> <span class="pl-k">=</span> <span class="pl-smi">n</span> <span class="pl-k">=&gt;</span> n <span class="pl-k">&gt;</span> <span class="pl-c1">50</span> <span class="pl-k">?</span> <span class="pl-c1">false</span> <span class="pl-k">:</span> [<span class="pl-k">-</span>n, n <span class="pl-k">+</span> <span class="pl-c1">10</span>];</td>
      </tr>
      <tr>
        <td id="file-script-js-L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="file-script-js-LC1098" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">unfold</span>(f, <span class="pl-c1">10</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; [-10, -20, -30, -40, -50]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="file-script-js-LC1099" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">union</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>], [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="file-script-js-LC1100" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l1 <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">2</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="file-script-js-LC1101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> l2 <span class="pl-k">=</span> [{a<span class="pl-k">:</span> <span class="pl-c1">1</span>}, {a<span class="pl-k">:</span> <span class="pl-c1">4</span>}];</td>
      </tr>
      <tr>
        <td id="file-script-js-L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="file-script-js-LC1102" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">unionWith</span>(<span class="pl-c1">R</span>.<span class="pl-en">eqBy</span>(<span class="pl-c1">R</span>.<span class="pl-en">prop</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>)), l1, l2); <span class="pl-c"><span class="pl-c">//</span>=&gt; [{a: 1}, {a: 2}, {a: 4}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="file-script-js-LC1103" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniq</span>([<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="file-script-js-LC1104" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniq</span>([<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, &#39;1&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="file-script-js-LC1105" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniq</span>([[<span class="pl-c1">42</span>], [<span class="pl-c1">42</span>]]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[42]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="file-script-js-LC1106" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniqBy</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">abs</span>, [<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>, <span class="pl-c1">2</span>, <span class="pl-c1">10</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [-1, -5, 2, 10]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="file-script-js-LC1107" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> strEq <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">eqBy</span>(<span class="pl-c1">String</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="file-script-js-LC1108" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniqWith</span>(strEq)([<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="file-script-js-LC1109" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniqWith</span>(strEq)([{}, {}]);       <span class="pl-c"><span class="pl-c">//</span>=&gt; [{}]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="file-script-js-LC1110" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniqWith</span>(strEq)([<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>]);    <span class="pl-c"><span class="pl-c">//</span>=&gt; [1]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="file-script-js-LC1111" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">uniqWith</span>(strEq)([<span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>]);    <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;1&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="file-script-js-LC1112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">let</span> safeInc <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">unless</span>(<span class="pl-c1">R</span>.<span class="pl-smi">isNil</span>, <span class="pl-c1">R</span>.<span class="pl-smi">inc</span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="file-script-js-LC1113" class="blob-code blob-code-inner js-file-line"><span class="pl-en">safeInc</span>(<span class="pl-c1">null</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; null</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="file-script-js-LC1114" class="blob-code blob-code-inner js-file-line"><span class="pl-en">safeInc</span>(<span class="pl-c1">1</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 2</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="file-script-js-LC1115" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">unnest</span>([<span class="pl-c1">1</span>, [<span class="pl-c1">2</span>], [[<span class="pl-c1">3</span>]]]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, [3]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="file-script-js-LC1116" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">unnest</span>([[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>], [<span class="pl-c1">5</span>, <span class="pl-c1">6</span>]]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3, 4, 5, 6]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="file-script-js-LC1117" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">until</span>(<span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">100</span>), <span class="pl-c1">R</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">2</span>))(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">//</span> =&gt; 128</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="file-script-js-LC1118" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">update</span>(<span class="pl-c1">1</span>, <span class="pl-c1">11</span>, [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [0, 11, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="file-script-js-LC1119" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">update</span>(<span class="pl-c1">1</span>)(<span class="pl-c1">11</span>)([<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>]);     <span class="pl-c"><span class="pl-c">//</span>=&gt; [0, 11, 2]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="file-script-js-LC1120" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">useWith</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">pow</span>, [<span class="pl-c1">R</span>.<span class="pl-smi">identity</span>, <span class="pl-c1">R</span>.<span class="pl-smi">identity</span>])(<span class="pl-c1">3</span>, <span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 81</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="file-script-js-LC1121" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">useWith</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">pow</span>, [<span class="pl-c1">R</span>.<span class="pl-smi">identity</span>, <span class="pl-c1">R</span>.<span class="pl-smi">identity</span>])(<span class="pl-c1">3</span>)(<span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 81</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="file-script-js-LC1122" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">useWith</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">pow</span>, [<span class="pl-c1">R</span>.<span class="pl-smi">dec</span>, <span class="pl-c1">R</span>.<span class="pl-smi">inc</span>])(<span class="pl-c1">3</span>, <span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 32</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="file-script-js-LC1123" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">useWith</span>(<span class="pl-c1">Math</span>.<span class="pl-smi">pow</span>, [<span class="pl-c1">R</span>.<span class="pl-smi">dec</span>, <span class="pl-c1">R</span>.<span class="pl-smi">inc</span>])(<span class="pl-c1">3</span>)(<span class="pl-c1">4</span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; 32</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="file-script-js-LC1124" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-c1">values</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; [1, 2, 3]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="file-script-js-LC1125" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>var F = function() { this.x = &#39;X&#39;; };</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="file-script-js-LC1126" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Y<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="file-script-js-L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="file-script-js-LC1127" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">F</span>();</td>
      </tr>
      <tr>
        <td id="file-script-js-L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="file-script-js-LC1128" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">valuesIn</span>(f); <span class="pl-c"><span class="pl-c">//</span>=&gt; [&#39;X&#39;, &#39;Y&#39;]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="file-script-js-LC1129" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> xLens <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">lensProp</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>x<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="file-script-js-LC1130" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="file-script-js-LC1131" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">view</span>(xLens, {x<span class="pl-k">:</span> <span class="pl-c1">1</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; 1</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="file-script-js-LC1132" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">view</span>(xLens, {x<span class="pl-k">:</span> <span class="pl-c1">4</span>, y<span class="pl-k">:</span> <span class="pl-c1">2</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; 4</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="file-script-js-LC1133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> truncate :: String -&gt; String</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="file-script-js-LC1134" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> truncate <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">when</span>(</td>
      </tr>
      <tr>
        <td id="file-script-js-L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="file-script-js-LC1135" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">propSatisfies</span>(<span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">10</span>), <span class="pl-s"><span class="pl-pds">&#39;</span>length<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="file-script-js-LC1136" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">R</span>.<span class="pl-en">pipe</span>(<span class="pl-c1">R</span>.<span class="pl-en">take</span>(<span class="pl-c1">10</span>), <span class="pl-c1">R</span>.<span class="pl-c1">append</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>â¦<span class="pl-pds">&#39;</span></span>), <span class="pl-c1">R</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>))</td>
      </tr>
      <tr>
        <td id="file-script-js-L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="file-script-js-LC1137" class="blob-code blob-code-inner js-file-line">);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="file-script-js-LC1138" class="blob-code blob-code-inner js-file-line"><span class="pl-en">truncate</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>12345<span class="pl-pds">&#39;</span></span>);         <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;12345&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="file-script-js-LC1139" class="blob-code blob-code-inner js-file-line"><span class="pl-en">truncate</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>0123456789ABC<span class="pl-pds">&#39;</span></span>); <span class="pl-c"><span class="pl-c">//</span>=&gt; &#39;0123456789â¦&#39;</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="file-script-js-LC1140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> pred :: Object -&gt; Boolean</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="file-script-js-LC1141" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> pred <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">where</span>({</td>
      </tr>
      <tr>
        <td id="file-script-js-L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="file-script-js-LC1142" class="blob-code blob-code-inner js-file-line">  a<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="file-script-js-LC1143" class="blob-code blob-code-inner js-file-line">  b<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-en">complement</span>(<span class="pl-c1">R</span>.<span class="pl-en">equals</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>)),</td>
      </tr>
      <tr>
        <td id="file-script-js-L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="file-script-js-LC1144" class="blob-code blob-code-inner js-file-line">  x<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-en">gt</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">10</span>),</td>
      </tr>
      <tr>
        <td id="file-script-js-L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="file-script-js-LC1145" class="blob-code blob-code-inner js-file-line">  y<span class="pl-k">:</span> <span class="pl-c1">R</span>.<span class="pl-en">lt</span>(<span class="pl-c1">R</span>.<span class="pl-smi">__</span>, <span class="pl-c1">20</span>)</td>
      </tr>
      <tr>
        <td id="file-script-js-L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="file-script-js-LC1146" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="file-script-js-L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="file-script-js-LC1147" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="file-script-js-LC1148" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, b<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>xxx<span class="pl-pds">&#39;</span></span>, x<span class="pl-k">:</span> <span class="pl-c1">11</span>, y<span class="pl-k">:</span> <span class="pl-c1">19</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="file-script-js-LC1149" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>xxx<span class="pl-pds">&#39;</span></span>, b<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>xxx<span class="pl-pds">&#39;</span></span>, x<span class="pl-k">:</span> <span class="pl-c1">11</span>, y<span class="pl-k">:</span> <span class="pl-c1">19</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="file-script-js-LC1150" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, b<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bar<span class="pl-pds">&#39;</span></span>, x<span class="pl-k">:</span> <span class="pl-c1">11</span>, y<span class="pl-k">:</span> <span class="pl-c1">19</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="file-script-js-LC1151" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, b<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>xxx<span class="pl-pds">&#39;</span></span>, x<span class="pl-k">:</span> <span class="pl-c1">10</span>, y<span class="pl-k">:</span> <span class="pl-c1">19</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="file-script-js-LC1152" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>foo<span class="pl-pds">&#39;</span></span>, b<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>xxx<span class="pl-pds">&#39;</span></span>, x<span class="pl-k">:</span> <span class="pl-c1">11</span>, y<span class="pl-k">:</span> <span class="pl-c1">20</span>}); <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="file-script-js-LC1153" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> pred :: Object -&gt; Boolean</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="file-script-js-LC1154" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> pred <span class="pl-k">=</span> <span class="pl-c1">R</span>.<span class="pl-en">whereEq</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>});</td>
      </tr>
      <tr>
        <td id="file-script-js-L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="file-script-js-LC1155" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-script-js-L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="file-script-js-LC1156" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>});              <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="file-script-js-LC1157" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>});        <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="file-script-js-LC1158" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">2</span>, c<span class="pl-k">:</span> <span class="pl-c1">3</span>});  <span class="pl-c"><span class="pl-c">//</span>=&gt; true</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="file-script-js-LC1159" class="blob-code blob-code-inner js-file-line"><span class="pl-en">pred</span>({a<span class="pl-k">:</span> <span class="pl-c1">1</span>, b<span class="pl-k">:</span> <span class="pl-c1">1</span>});        <span class="pl-c"><span class="pl-c">//</span>=&gt; false</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="file-script-js-LC1160" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">without</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [3, 4]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="file-script-js-LC1161" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">xprod</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1, &#39;a&#39;], [1, &#39;b&#39;], [2, &#39;a&#39;], [2, &#39;b&#39;]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="file-script-js-LC1162" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">zip</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; [[1, &#39;a&#39;], [2, &#39;b&#39;], [3, &#39;c&#39;]]</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="file-script-js-LC1163" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">zipObj</span>([<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>], [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]); <span class="pl-c"><span class="pl-c">//</span>=&gt; {a: 1, b: 2, c: 3}</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="file-script-js-LC1164" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">f</span> <span class="pl-k">=</span> (<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) <span class="pl-k">=&gt;</span> {</td>
      </tr>
      <tr>
        <td id="file-script-js-L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="file-script-js-LC1165" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> ...</span></td>
      </tr>
      <tr>
        <td id="file-script-js-L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="file-script-js-LC1166" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="file-script-js-L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="file-script-js-LC1167" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span>.<span class="pl-en">zipWith</span>(f, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>c<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="file-script-js-L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="file-script-js-LC1168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>=&gt; [f(1, &#39;a&#39;), f(2, &#39;b&#39;), f(3, &#39;c&#39;)]</span></td>
      </tr>
</table>


  </div>

  </div>
</div>

        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-scripts" class="file">
      <div class="file-header">
        <div class="file-actions">

          <a class="btn btn-sm " href="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/raw/db129c260c012b8956e839e8468066be02daf970/scripts">Raw</a>
        </div>
        <div class="file-info">
          <span class="icon">
            <svg class="octicon octicon-gist" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.5 5L10 7.5 7.5 10l-.75-.75L8.5 7.5 6.75 5.75 7.5 5zm-3 0L2 7.5 4.5 10l.75-.75L3.5 7.5l1.75-1.75L4.5 5zM0 13V2c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v11c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1zm1 0h10V2H1v11z"/></svg>
          </span>
          <a class="tooltipped tooltipped-s css-truncate" aria-label="Permalink" href="#file-scripts">
            <strong class="user-select-contain gist-blob-name css-truncate-target">
              scripts
            </strong>
          </a>
        </div>
      </div>
    

  <div itemprop="text" class="blob-wrapper data type-text ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="file-scripts-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-scripts-LC1" class="blob-code blob-code-inner js-file-line">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/ramda/0.25.0/ramda.min.js&quot;&gt;&lt;/script&gt;</td>
      </tr>
</table>


  </div>

  </div>
</div>


    <a name="comments"></a>
    <div class="discussion-timeline gist-discussion-timeline js-quote-selection-container" data-quote-markdown=".js-comment-body">
      <div class="js-discussion js-socket-channel" data-channel="marked-as-read:gist:92607446">
        

<!-- Rendered timeline since 2018-10-22 21:15:44 -->
<div id="partial-timeline-marker"
      class="js-timeline-marker js-updatable-content"
      data-url="/taroyanaka/4653c12ed8388296b2f8e9311367ce94/show_partial?partial=gist%2Ftimeline_marker&amp;since=1540268144"
      data-last-modified="Tue, 23 Oct 2018 04:15:44 GMT"
      >
</div>


        <div class="discussion-timeline-actions">
            <div class="flash flash-warn mt-3">
    <a rel="nofollow" class="btn btn-primary" href="/join?source=comment-gist">Sign up for free</a>
    <strong>to join this conversation on GitHub</strong>.
    Already have an account?
    <a rel="nofollow" href="/login?return_to=https%3A%2F%2Fgist.github.com%2Ftaroyanaka%2F4653c12ed8388296b2f8e9311367ce94">Sign in to comment</a>
</div>

        </div>
      </div>
    </div>
</div>
  </div>

  <div class="modal-backdrop js-touch-events"></div>
</div><!-- /.container -->

    </div>
  </div>

  </div>

        
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2019 <span title="0.41855s from unicorn-5d944f4855-5nqhr">GitHub</span>, Inc.</li>
        <li class="mr-3"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to security, text:security" href="https://github.com/security">Security</a></li>
        <li class="mr-3"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon mr-lg-4" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
        <li class="mr-3"><a href="https://github.com/pricing" data-ga-click="Footer, go to Pricing, text:Pricing">Pricing</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
        <li class="mr-3"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You canât perform that action at this time.
  </div>


    <script crossorigin="anonymous" integrity="sha512-47ZXWJASen/yLysPiEpAb7/WvHBIHIRKo+7W5g0YYFiInTWqpjYBHTpeHut0QWEf51gExNhSEy55XQmxrZ+0xA==" type="application/javascript" src="https://github.githubassets.com/assets/compat-742699bf681282d2e3cf809d2b9de73a.js"></script>
    <script crossorigin="anonymous" integrity="sha512-U4aZhAD+WfXfhcqr9dk4ma8H9Bj7i1qOzmlDDZf9m1LsZgNE7hM9mwzbAbbPGB6/yS5uPitk/Q2fVyfkIOaTrQ==" type="application/javascript" src="https://github.githubassets.com/assets/frameworks-0ed08ac25fb01d22cac20acc4189b7fb.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-z0Ykt0qTDHoftgWHTV1sA2mEdLJEZtFLWak0t7W8cKomkJfFClDcz4TCdv+cuZ6ctck2+0X5laQv8ICBs+INlw==" type="application/javascript" src="https://github.githubassets.com/assets/github-d97db6cf07d1f2b98f3a2e88922fb17d.js"></script>
    
      <script crossorigin="anonymous" async="async" integrity="sha512-xpkvAt5UEsj2uIPqVcW/j8TE/Rb+jlAKdY8whbyX0Vkq67YnPOP+Tz2ld+AcwElxoUc1//TmApVBmIOvH0dK0w==" type="application/javascript" src="https://github.githubassets.com/assets/gist-d7a8b07a61797433a981880e8051bab3.js"></script>

    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark" open>
    <summary aria-haspopup="dialog" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

<div id="hovercard-aria-description" class="sr-only">
  Press h to open a hovercard with more details.
</div>

  <div aria-live="polite" class="js-global-screen-reader-notice sr-only"></div>

  </body>
</html>

